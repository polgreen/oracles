Fri 21 May 2021 15:43:57 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4266546349953950881 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv13725227202737381790 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7358570888215181246 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6528546107426774696 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv6565293577874632244 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10503077617718404387 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv10585391425363868035 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17180228306040443506 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv878286760056419681 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv1038949557792402082 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv1038949557792402082 64) )) (= (_ bv0 64) (ref (_ bv878286760056419681 64) )) (= (_ bv0 64) (ref (_ bv17180228306040443506 64) )) (= (_ bv0 64) (ref (_ bv10585391425363868035 64) )) (= (_ bv0 64) (ref (_ bv10503077617718404387 64) )) (= (_ bv0 64) (ref (_ bv6565293577874632244 64) )) (= (_ bv0 64) (ref (_ bv6528546107426774696 64) )) (= (_ bv0 64) (ref (_ bv7358570888215181246 64) )) (= (_ bv0 64) (ref (_ bv13725227202737381790 64) )) (= (_ bv0 64) (ref (_ bv4266546349953950881 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4266546349953950881 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv13725227202737381790 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7358570888215181246 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6528546107426774696 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv6565293577874632244 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10503077617718404387 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv10585391425363868035 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17180228306040443506 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv878286760056419681 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv1038949557792402082 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv1038949557792402082 64) )) (= (_ bv0 64) (ref (_ bv878286760056419681 64) )) (= (_ bv0 64) (ref (_ bv17180228306040443506 64) )) (= (_ bv0 64) (ref (_ bv10585391425363868035 64) )) (= (_ bv0 64) (ref (_ bv10503077617718404387 64) )) (= (_ bv0 64) (ref (_ bv6565293577874632244 64) )) (= (_ bv0 64) (ref (_ bv6528546107426774696 64) )) (= (_ bv0 64) (ref (_ bv7358570888215181246 64) )) (= (_ bv0 64) (ref (_ bv13725227202737381790 64) )) (= (_ bv0 64) (ref (_ bv4266546349953950881 64) )))))

; set_to true
(assert (=> (= (_ bv1038949557792402082 64) (_ bv1038949557792402082 64)) (= |H9| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv878286760056419681 64) (_ bv878286760056419681 64)) (= |H8| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv17180228306040443506 64) (_ bv17180228306040443506 64)) (= |H7| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv10585391425363868035 64) (_ bv10585391425363868035 64)) (= |H6| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv10503077617718404387 64) (_ bv10503077617718404387 64)) (= |H5| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv6565293577874632244 64) (_ bv6565293577874632244 64)) (= |H4| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv7358570888215181246 64) (_ bv7358570888215181246 64)) (= |H2| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv13725227202737381790 64) (_ bv13725227202737381790 64)) (= |H1| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv6528546107426774696 64) (_ bv6528546107426774696 64)) (= |H3| (_ bv131070 64))))

; set_to true
(assert (=> (= (_ bv4266546349953950881 64) (_ bv4266546349953950881 64)) (= |H0| (_ bv131070 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4266546349953950881 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv13725227202737381790 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7358570888215181246 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6528546107426774696 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv6565293577874632244 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10503077617718404387 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv10585391425363868035 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17180228306040443506 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv878286760056419681 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv1038949557792402082 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv4266546349953950881 64) ) (_ bv131070 64)) (= (ref (_ bv6528546107426774696 64) ) (_ bv131070 64)) (= (ref (_ bv6565293577874632244 64) ) (_ bv131070 64)) (= (ref (_ bv7358570888215181246 64) ) (_ bv131070 64)) (= (ref (_ bv10503077617718404387 64) ) (_ bv131070 64)) (= (ref (_ bv10585391425363868035 64) ) (_ bv131070 64)) (= (ref (_ bv13725227202737381790 64) ) (_ bv131070 64)) (= (ref (_ bv878286760056419681 64) ) (_ bv131070 64)) (= (ref (_ bv1038949557792402082 64) ) (_ bv131070 64)) (= (ref (_ bv17180228306040443506 64) ) (_ bv131070 64))) (and (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv1038949557792402082 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv878286760056419681 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv17180228306040443506 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv10585391425363868035 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv10503077617718404387 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv6565293577874632244 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv6528546107426774696 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv7358570888215181246 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv13725227202737381790 64) )) (= (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv4266546349953950881 64) ))))))

Verification passed
SOLUTION:
f  =  (bvshl (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))
        5.93 real         5.55 user         0.10 sys
