Fri 21 May 2021 15:53:54 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6234267510391319697 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16780902932609320933 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv3830246100236228257 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16220744526636307117 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17165573556631966259 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4425638677118836400 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv6006300939707880901 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2424401526289419390 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8569610043074556500 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12954497533266713325 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12954497533266713325 64) )) (= (_ bv0 64) (ref (_ bv8569610043074556500 64) )) (= (_ bv0 64) (ref (_ bv2424401526289419390 64) )) (= (_ bv0 64) (ref (_ bv6006300939707880901 64) )) (= (_ bv0 64) (ref (_ bv4425638677118836400 64) )) (= (_ bv0 64) (ref (_ bv17165573556631966259 64) )) (= (_ bv0 64) (ref (_ bv16220744526636307117 64) )) (= (_ bv0 64) (ref (_ bv3830246100236228257 64) )) (= (_ bv0 64) (ref (_ bv16780902932609320933 64) )) (= (_ bv0 64) (ref (_ bv6234267510391319697 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6234267510391319697 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16780902932609320933 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv3830246100236228257 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16220744526636307117 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17165573556631966259 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4425638677118836400 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv6006300939707880901 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2424401526289419390 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8569610043074556500 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12954497533266713325 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12954497533266713325 64) )) (= (_ bv0 64) (ref (_ bv8569610043074556500 64) )) (= (_ bv0 64) (ref (_ bv2424401526289419390 64) )) (= (_ bv0 64) (ref (_ bv6006300939707880901 64) )) (= (_ bv0 64) (ref (_ bv4425638677118836400 64) )) (= (_ bv0 64) (ref (_ bv17165573556631966259 64) )) (= (_ bv0 64) (ref (_ bv16220744526636307117 64) )) (= (_ bv0 64) (ref (_ bv3830246100236228257 64) )) (= (_ bv0 64) (ref (_ bv16780902932609320933 64) )) (= (_ bv0 64) (ref (_ bv6234267510391319697 64) )))))

; set_to true
(assert (=> (= (_ bv12954497533266713325 64) (_ bv12954497533266713325 64)) (= |H9| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv8569610043074556500 64) (_ bv8569610043074556500 64)) (= |H8| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv2424401526289419390 64) (_ bv2424401526289419390 64)) (= |H7| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv6006300939707880901 64) (_ bv6006300939707880901 64)) (= |H6| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv4425638677118836400 64) (_ bv4425638677118836400 64)) (= |H5| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv17165573556631966259 64) (_ bv17165573556631966259 64)) (= |H4| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv3830246100236228257 64) (_ bv3830246100236228257 64)) (= |H2| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv16780902932609320933 64) (_ bv16780902932609320933 64)) (= |H1| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv16220744526636307117 64) (_ bv16220744526636307117 64)) (= |H3| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv6234267510391319697 64) (_ bv6234267510391319697 64)) (= |H0| (_ bv2147483648 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> (~(~0 >> 1) >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6234267510391319697 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16780902932609320933 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv3830246100236228257 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16220744526636307117 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17165573556631966259 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4425638677118836400 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv6006300939707880901 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2424401526289419390 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8569610043074556500 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12954497533266713325 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2424401526289419390 64) ) (_ bv2147483648 64)) (= (ref (_ bv3830246100236228257 64) ) (_ bv2147483648 64)) (= (ref (_ bv4425638677118836400 64) ) (_ bv2147483648 64)) (= (ref (_ bv6006300939707880901 64) ) (_ bv2147483648 64)) (= (ref (_ bv6234267510391319697 64) ) (_ bv2147483648 64)) (= (ref (_ bv8569610043074556500 64) ) (_ bv2147483648 64)) (= (ref (_ bv12954497533266713325 64) ) (_ bv2147483648 64)) (= (ref (_ bv16220744526636307117 64) ) (_ bv2147483648 64)) (= (ref (_ bv16780902932609320933 64) ) (_ bv2147483648 64)) (= (ref (_ bv17165573556631966259 64) ) (_ bv2147483648 64))) (and (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv12954497533266713325 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv8569610043074556500 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv2424401526289419390 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv6006300939707880901 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4425638677118836400 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv17165573556631966259 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16220744526636307117 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv3830246100236228257 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16780902932609320933 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv6234267510391319697 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64))
        5.49 real         5.12 user         0.10 sys
