Fri 21 May 2021 15:43:50 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7089569210819288206 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv283292383915454615 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1762825475970018254 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv11440562854766220990 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12187807470958585806 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv1541434610950160967 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv16668623821350581483 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv7508594209933147532 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14590224024012073222 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12539796079793013216 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12539796079793013216 64) )) (= (_ bv0 64) (ref (_ bv14590224024012073222 64) )) (= (_ bv0 64) (ref (_ bv7508594209933147532 64) )) (= (_ bv0 64) (ref (_ bv16668623821350581483 64) )) (= (_ bv0 64) (ref (_ bv1541434610950160967 64) )) (= (_ bv0 64) (ref (_ bv12187807470958585806 64) )) (= (_ bv0 64) (ref (_ bv11440562854766220990 64) )) (= (_ bv0 64) (ref (_ bv1762825475970018254 64) )) (= (_ bv0 64) (ref (_ bv283292383915454615 64) )) (= (_ bv0 64) (ref (_ bv7089569210819288206 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7089569210819288206 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv283292383915454615 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1762825475970018254 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv11440562854766220990 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12187807470958585806 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv1541434610950160967 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv16668623821350581483 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv7508594209933147532 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14590224024012073222 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12539796079793013216 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12539796079793013216 64) )) (= (_ bv0 64) (ref (_ bv14590224024012073222 64) )) (= (_ bv0 64) (ref (_ bv7508594209933147532 64) )) (= (_ bv0 64) (ref (_ bv16668623821350581483 64) )) (= (_ bv0 64) (ref (_ bv1541434610950160967 64) )) (= (_ bv0 64) (ref (_ bv12187807470958585806 64) )) (= (_ bv0 64) (ref (_ bv11440562854766220990 64) )) (= (_ bv0 64) (ref (_ bv1762825475970018254 64) )) (= (_ bv0 64) (ref (_ bv283292383915454615 64) )) (= (_ bv0 64) (ref (_ bv7089569210819288206 64) )))))

; set_to true
(assert (=> (= (_ bv12539796079793013216 64) (_ bv12539796079793013216 64)) (= |H9| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv14590224024012073222 64) (_ bv14590224024012073222 64)) (= |H8| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv7508594209933147532 64) (_ bv7508594209933147532 64)) (= |H7| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv16668623821350581483 64) (_ bv16668623821350581483 64)) (= |H6| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv1541434610950160967 64) (_ bv1541434610950160967 64)) (= |H5| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv12187807470958585806 64) (_ bv12187807470958585806 64)) (= |H4| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv1762825475970018254 64) (_ bv1762825475970018254 64)) (= |H2| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv283292383915454615 64) (_ bv283292383915454615 64)) (= |H1| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv11440562854766220990 64) (_ bv11440562854766220990 64)) (= |H3| (_ bv65536 64))))

; set_to true
(assert (=> (= (_ bv7089569210819288206 64) (_ bv7089569210819288206 64)) (= |H0| (_ bv65536 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7089569210819288206 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv283292383915454615 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1762825475970018254 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv11440562854766220990 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12187807470958585806 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv1541434610950160967 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv16668623821350581483 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv7508594209933147532 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14590224024012073222 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12539796079793013216 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1541434610950160967 64) ) (_ bv65536 64)) (= (ref (_ bv1762825475970018254 64) ) (_ bv65536 64)) (= (ref (_ bv283292383915454615 64) ) (_ bv65536 64)) (= (ref (_ bv7089569210819288206 64) ) (_ bv65536 64)) (= (ref (_ bv7508594209933147532 64) ) (_ bv65536 64)) (= (ref (_ bv11440562854766220990 64) ) (_ bv65536 64)) (= (ref (_ bv12187807470958585806 64) ) (_ bv65536 64)) (= (ref (_ bv12539796079793013216 64) ) (_ bv65536 64)) (= (ref (_ bv14590224024012073222 64) ) (_ bv65536 64)) (= (ref (_ bv16668623821350581483 64) ) (_ bv65536 64))) (and (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv12539796079793013216 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv14590224024012073222 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv7508594209933147532 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16668623821350581483 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv1541434610950160967 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv12187807470958585806 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv11440562854766220990 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv1762825475970018254 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv283292383915454615 64) )) (= (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv7089569210819288206 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (_ bv16 64))
        6.82 real         6.32 user         0.11 sys
