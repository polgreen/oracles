Fri 21 May 2021 15:48:36 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv10295563268312285241 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16743924844402860426 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv16188352036916329453 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv2903459844022540432 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5973414313707785875 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12583313872285209029 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15583512316341324226 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv5607759667788180258 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3921437502986718190 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv10219613947479404928 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv10219613947479404928 64) )) (= (_ bv0 64) (ref (_ bv3921437502986718190 64) )) (= (_ bv0 64) (ref (_ bv5607759667788180258 64) )) (= (_ bv0 64) (ref (_ bv15583512316341324226 64) )) (= (_ bv0 64) (ref (_ bv12583313872285209029 64) )) (= (_ bv0 64) (ref (_ bv5973414313707785875 64) )) (= (_ bv0 64) (ref (_ bv2903459844022540432 64) )) (= (_ bv0 64) (ref (_ bv16188352036916329453 64) )) (= (_ bv0 64) (ref (_ bv16743924844402860426 64) )) (= (_ bv0 64) (ref (_ bv10295563268312285241 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv10295563268312285241 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16743924844402860426 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv16188352036916329453 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv2903459844022540432 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5973414313707785875 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12583313872285209029 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15583512316341324226 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv5607759667788180258 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3921437502986718190 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv10219613947479404928 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv10219613947479404928 64) )) (= (_ bv0 64) (ref (_ bv3921437502986718190 64) )) (= (_ bv0 64) (ref (_ bv5607759667788180258 64) )) (= (_ bv0 64) (ref (_ bv15583512316341324226 64) )) (= (_ bv0 64) (ref (_ bv12583313872285209029 64) )) (= (_ bv0 64) (ref (_ bv5973414313707785875 64) )) (= (_ bv0 64) (ref (_ bv2903459844022540432 64) )) (= (_ bv0 64) (ref (_ bv16188352036916329453 64) )) (= (_ bv0 64) (ref (_ bv16743924844402860426 64) )) (= (_ bv0 64) (ref (_ bv10295563268312285241 64) )))))

; set_to true
(assert (=> (= (_ bv10219613947479404928 64) (_ bv10219613947479404928 64)) (= |H9| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv3921437502986718190 64) (_ bv3921437502986718190 64)) (= |H8| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv5607759667788180258 64) (_ bv5607759667788180258 64)) (= |H7| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv15583512316341324226 64) (_ bv15583512316341324226 64)) (= |H6| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv12583313872285209029 64) (_ bv12583313872285209029 64)) (= |H5| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv5973414313707785875 64) (_ bv5973414313707785875 64)) (= |H4| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv16188352036916329453 64) (_ bv16188352036916329453 64)) (= |H2| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv16743924844402860426 64) (_ bv16743924844402860426 64)) (= |H1| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv2903459844022540432 64) (_ bv2903459844022540432 64)) (= |H3| (_ bv4294967296 64))))

; set_to true
(assert (=> (= (_ bv10295563268312285241 64) (_ bv10295563268312285241 64)) (= |H0| (_ bv4294967296 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> 1 + (~0 >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv10295563268312285241 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16743924844402860426 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv16188352036916329453 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv2903459844022540432 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5973414313707785875 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12583313872285209029 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15583512316341324226 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv5607759667788180258 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3921437502986718190 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv10219613947479404928 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2903459844022540432 64) ) (_ bv4294967296 64)) (= (ref (_ bv3921437502986718190 64) ) (_ bv4294967296 64)) (= (ref (_ bv5607759667788180258 64) ) (_ bv4294967296 64)) (= (ref (_ bv5973414313707785875 64) ) (_ bv4294967296 64)) (= (ref (_ bv10219613947479404928 64) ) (_ bv4294967296 64)) (= (ref (_ bv10295563268312285241 64) ) (_ bv4294967296 64)) (= (ref (_ bv12583313872285209029 64) ) (_ bv4294967296 64)) (= (ref (_ bv15583512316341324226 64) ) (_ bv4294967296 64)) (= (ref (_ bv16188352036916329453 64) ) (_ bv4294967296 64)) (= (ref (_ bv16743924844402860426 64) ) (_ bv4294967296 64))) (and (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv10219613947479404928 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv3921437502986718190 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv5607759667788180258 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv15583512316341324226 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv12583313872285209029 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv5973414313707785875 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv2903459844022540432 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv16188352036916329453 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv16743924844402860426 64) )) (= (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64)) (ref (_ bv10295563268312285241 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvadd (_ bv1 64) (bvlshr (bvnot (_ bv0 64)) (_ bv16 64))) (_ bv16 64))
        0.98 real         0.63 user         0.07 sys
