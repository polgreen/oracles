Fri 21 May 2021 15:46:20 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv13466724996106329136 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv4624891677613386766 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13899271079618473630 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv830497587581957993 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5893764606582380294 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16195190788217874307 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv7475359850706968067 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv14418905012810719982 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8291282161018627966 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv10539187129320750003 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv10539187129320750003 64) )) (= (_ bv0 64) (ref (_ bv8291282161018627966 64) )) (= (_ bv0 64) (ref (_ bv14418905012810719982 64) )) (= (_ bv0 64) (ref (_ bv7475359850706968067 64) )) (= (_ bv0 64) (ref (_ bv16195190788217874307 64) )) (= (_ bv0 64) (ref (_ bv5893764606582380294 64) )) (= (_ bv0 64) (ref (_ bv830497587581957993 64) )) (= (_ bv0 64) (ref (_ bv13899271079618473630 64) )) (= (_ bv0 64) (ref (_ bv4624891677613386766 64) )) (= (_ bv0 64) (ref (_ bv13466724996106329136 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv13466724996106329136 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv4624891677613386766 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13899271079618473630 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv830497587581957993 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5893764606582380294 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16195190788217874307 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv7475359850706968067 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv14418905012810719982 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8291282161018627966 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv10539187129320750003 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv10539187129320750003 64) )) (= (_ bv0 64) (ref (_ bv8291282161018627966 64) )) (= (_ bv0 64) (ref (_ bv14418905012810719982 64) )) (= (_ bv0 64) (ref (_ bv7475359850706968067 64) )) (= (_ bv0 64) (ref (_ bv16195190788217874307 64) )) (= (_ bv0 64) (ref (_ bv5893764606582380294 64) )) (= (_ bv0 64) (ref (_ bv830497587581957993 64) )) (= (_ bv0 64) (ref (_ bv13899271079618473630 64) )) (= (_ bv0 64) (ref (_ bv4624891677613386766 64) )) (= (_ bv0 64) (ref (_ bv13466724996106329136 64) )))))

; set_to true
(assert (=> (= (_ bv10539187129320750003 64) (_ bv10539187129320750003 64)) (= |H9| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv8291282161018627966 64) (_ bv8291282161018627966 64)) (= |H8| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv14418905012810719982 64) (_ bv14418905012810719982 64)) (= |H7| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv7475359850706968067 64) (_ bv7475359850706968067 64)) (= |H6| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv16195190788217874307 64) (_ bv16195190788217874307 64)) (= |H5| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv5893764606582380294 64) (_ bv5893764606582380294 64)) (= |H4| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv13899271079618473630 64) (_ bv13899271079618473630 64)) (= |H2| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv4624891677613386766 64) (_ bv4624891677613386766 64)) (= |H1| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv830497587581957993 64) (_ bv830497587581957993 64)) (= |H3| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv13466724996106329136 64) (_ bv13466724996106329136 64)) (= |H0| (_ bv0 64))))

Verification passed
SOLUTION:
f  =  (_ bv0 64)
        0.36 real         0.07 user         0.04 sys
