Fri 21 May 2021 16:14:56 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15621616971503245880 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv9658947697890478054 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv512087213184784289 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv15558906481962793418 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10830843911019650622 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8503902885242771370 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv5254022256187769306 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv8076158254711687182 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11997280340989580160 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv6708704986407494515 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv6708704986407494515 64) )) (= (_ bv0 64) (ref (_ bv11997280340989580160 64) )) (= (_ bv0 64) (ref (_ bv8076158254711687182 64) )) (= (_ bv0 64) (ref (_ bv5254022256187769306 64) )) (= (_ bv0 64) (ref (_ bv8503902885242771370 64) )) (= (_ bv0 64) (ref (_ bv10830843911019650622 64) )) (= (_ bv0 64) (ref (_ bv15558906481962793418 64) )) (= (_ bv0 64) (ref (_ bv512087213184784289 64) )) (= (_ bv0 64) (ref (_ bv9658947697890478054 64) )) (= (_ bv0 64) (ref (_ bv15621616971503245880 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15621616971503245880 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv9658947697890478054 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv512087213184784289 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv15558906481962793418 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10830843911019650622 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8503902885242771370 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv5254022256187769306 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv8076158254711687182 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11997280340989580160 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv6708704986407494515 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv6708704986407494515 64) )) (= (_ bv0 64) (ref (_ bv11997280340989580160 64) )) (= (_ bv0 64) (ref (_ bv8076158254711687182 64) )) (= (_ bv0 64) (ref (_ bv5254022256187769306 64) )) (= (_ bv0 64) (ref (_ bv8503902885242771370 64) )) (= (_ bv0 64) (ref (_ bv10830843911019650622 64) )) (= (_ bv0 64) (ref (_ bv15558906481962793418 64) )) (= (_ bv0 64) (ref (_ bv512087213184784289 64) )) (= (_ bv0 64) (ref (_ bv9658947697890478054 64) )) (= (_ bv0 64) (ref (_ bv15621616971503245880 64) )))))

; set_to true
(assert (=> (= (_ bv6708704986407494515 64) (_ bv6708704986407494515 64)) (= |H9| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv11997280340989580160 64) (_ bv11997280340989580160 64)) (= |H8| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv8076158254711687182 64) (_ bv8076158254711687182 64)) (= |H7| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv5254022256187769306 64) (_ bv5254022256187769306 64)) (= |H6| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv8503902885242771370 64) (_ bv8503902885242771370 64)) (= |H5| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv10830843911019650622 64) (_ bv10830843911019650622 64)) (= |H4| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv512087213184784289 64) (_ bv512087213184784289 64)) (= |H2| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv9658947697890478054 64) (_ bv9658947697890478054 64)) (= |H1| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv15558906481962793418 64) (_ bv15558906481962793418 64)) (= |H3| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv15621616971503245880 64) (_ bv15621616971503245880 64)) (= |H0| (_ bv4294967295 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> (~0 >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15621616971503245880 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv9658947697890478054 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv512087213184784289 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv15558906481962793418 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10830843911019650622 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8503902885242771370 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv5254022256187769306 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv8076158254711687182 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11997280340989580160 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv6708704986407494515 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv5254022256187769306 64) ) (_ bv4294967295 64)) (= (ref (_ bv6708704986407494515 64) ) (_ bv4294967295 64)) (= (ref (_ bv8076158254711687182 64) ) (_ bv4294967295 64)) (= (ref (_ bv512087213184784289 64) ) (_ bv4294967295 64)) (= (ref (_ bv8503902885242771370 64) ) (_ bv4294967295 64)) (= (ref (_ bv9658947697890478054 64) ) (_ bv4294967295 64)) (= (ref (_ bv10830843911019650622 64) ) (_ bv4294967295 64)) (= (ref (_ bv11997280340989580160 64) ) (_ bv4294967295 64)) (= (ref (_ bv15558906481962793418 64) ) (_ bv4294967295 64)) (= (ref (_ bv15621616971503245880 64) ) (_ bv4294967295 64))) (and (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv6708704986407494515 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv11997280340989580160 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv8076158254711687182 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv5254022256187769306 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv8503902885242771370 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv10830843911019650622 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv15558906481962793418 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv512087213184784289 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv9658947697890478054 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv15621616971503245880 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))
        0.44 real         0.12 user         0.06 sys
