Fri 21 May 2021 15:41:49 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16985052347926643202 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3079959842232206974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11017601001600697888 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13433766803002990261 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12542040352855944043 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12189328956008051947 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9341466084739100140 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6047543298990299060 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5459366972993308201 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3489298484626992134 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv3489298484626992134 64) )) (= (_ bv0 64) (ref (_ bv5459366972993308201 64) )) (= (_ bv0 64) (ref (_ bv6047543298990299060 64) )) (= (_ bv0 64) (ref (_ bv9341466084739100140 64) )) (= (_ bv0 64) (ref (_ bv12189328956008051947 64) )) (= (_ bv0 64) (ref (_ bv12542040352855944043 64) )) (= (_ bv0 64) (ref (_ bv13433766803002990261 64) )) (= (_ bv0 64) (ref (_ bv11017601001600697888 64) )) (= (_ bv0 64) (ref (_ bv3079959842232206974 64) )) (= (_ bv0 64) (ref (_ bv16985052347926643202 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16985052347926643202 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3079959842232206974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11017601001600697888 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13433766803002990261 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12542040352855944043 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12189328956008051947 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9341466084739100140 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6047543298990299060 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5459366972993308201 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3489298484626992134 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv3489298484626992134 64) )) (= (_ bv0 64) (ref (_ bv5459366972993308201 64) )) (= (_ bv0 64) (ref (_ bv6047543298990299060 64) )) (= (_ bv0 64) (ref (_ bv9341466084739100140 64) )) (= (_ bv0 64) (ref (_ bv12189328956008051947 64) )) (= (_ bv0 64) (ref (_ bv12542040352855944043 64) )) (= (_ bv0 64) (ref (_ bv13433766803002990261 64) )) (= (_ bv0 64) (ref (_ bv11017601001600697888 64) )) (= (_ bv0 64) (ref (_ bv3079959842232206974 64) )) (= (_ bv0 64) (ref (_ bv16985052347926643202 64) )))))

; set_to true
(assert (=> (= (_ bv3489298484626992134 64) (_ bv3489298484626992134 64)) (= |H9| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv5459366972993308201 64) (_ bv5459366972993308201 64)) (= |H8| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv6047543298990299060 64) (_ bv6047543298990299060 64)) (= |H7| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv9341466084739100140 64) (_ bv9341466084739100140 64)) (= |H6| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv12189328956008051947 64) (_ bv12189328956008051947 64)) (= |H5| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv12542040352855944043 64) (_ bv12542040352855944043 64)) (= |H4| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv11017601001600697888 64) (_ bv11017601001600697888 64)) (= |H2| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv3079959842232206974 64) (_ bv3079959842232206974 64)) (= |H1| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv13433766803002990261 64) (_ bv13433766803002990261 64)) (= |H3| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv16985052347926643202 64) (_ bv16985052347926643202 64)) (= |H0| (_ bv8589934590 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16985052347926643202 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3079959842232206974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11017601001600697888 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13433766803002990261 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12542040352855944043 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv12189328956008051947 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9341466084739100140 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6047543298990299060 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5459366972993308201 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3489298484626992134 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv3079959842232206974 64) ) (_ bv8589934590 64)) (= (ref (_ bv3489298484626992134 64) ) (_ bv8589934590 64)) (= (ref (_ bv5459366972993308201 64) ) (_ bv8589934590 64)) (= (ref (_ bv6047543298990299060 64) ) (_ bv8589934590 64)) (= (ref (_ bv9341466084739100140 64) ) (_ bv8589934590 64)) (= (ref (_ bv11017601001600697888 64) ) (_ bv8589934590 64)) (= (ref (_ bv12189328956008051947 64) ) (_ bv8589934590 64)) (= (ref (_ bv12542040352855944043 64) ) (_ bv8589934590 64)) (= (ref (_ bv13433766803002990261 64) ) (_ bv8589934590 64)) (= (ref (_ bv16985052347926643202 64) ) (_ bv8589934590 64))) (and (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv3489298484626992134 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv5459366972993308201 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv6047543298990299060 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv9341466084739100140 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv12189328956008051947 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv12542040352855944043 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv13433766803002990261 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv11017601001600697888 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv3079959842232206974 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv16985052347926643202 64) ))))))

Verification passed
SOLUTION:
f  =  (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))
        0.76 real         0.44 user         0.06 sys
