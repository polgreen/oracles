Fri 21 May 2021 15:46:18 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7988235313857873170 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15414357923146528480 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13488709479459236548 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12907376018726906803 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10378424267194164228 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2035030933205852364 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13682311703351893555 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv9255675695291548494 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11928885137655109461 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12589749694452062845 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12589749694452062845 64) )) (= (_ bv0 64) (ref (_ bv11928885137655109461 64) )) (= (_ bv0 64) (ref (_ bv9255675695291548494 64) )) (= (_ bv0 64) (ref (_ bv13682311703351893555 64) )) (= (_ bv0 64) (ref (_ bv2035030933205852364 64) )) (= (_ bv0 64) (ref (_ bv10378424267194164228 64) )) (= (_ bv0 64) (ref (_ bv12907376018726906803 64) )) (= (_ bv0 64) (ref (_ bv13488709479459236548 64) )) (= (_ bv0 64) (ref (_ bv15414357923146528480 64) )) (= (_ bv0 64) (ref (_ bv7988235313857873170 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7988235313857873170 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15414357923146528480 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13488709479459236548 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12907376018726906803 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10378424267194164228 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2035030933205852364 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13682311703351893555 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv9255675695291548494 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11928885137655109461 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12589749694452062845 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv12589749694452062845 64) )) (= (_ bv0 64) (ref (_ bv11928885137655109461 64) )) (= (_ bv0 64) (ref (_ bv9255675695291548494 64) )) (= (_ bv0 64) (ref (_ bv13682311703351893555 64) )) (= (_ bv0 64) (ref (_ bv2035030933205852364 64) )) (= (_ bv0 64) (ref (_ bv10378424267194164228 64) )) (= (_ bv0 64) (ref (_ bv12907376018726906803 64) )) (= (_ bv0 64) (ref (_ bv13488709479459236548 64) )) (= (_ bv0 64) (ref (_ bv15414357923146528480 64) )) (= (_ bv0 64) (ref (_ bv7988235313857873170 64) )))))

; set_to true
(assert (=> (= (_ bv12589749694452062845 64) (_ bv12589749694452062845 64)) (= |H9| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv11928885137655109461 64) (_ bv11928885137655109461 64)) (= |H8| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv9255675695291548494 64) (_ bv9255675695291548494 64)) (= |H7| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv13682311703351893555 64) (_ bv13682311703351893555 64)) (= |H6| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv2035030933205852364 64) (_ bv2035030933205852364 64)) (= |H5| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv10378424267194164228 64) (_ bv10378424267194164228 64)) (= |H4| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv13488709479459236548 64) (_ bv13488709479459236548 64)) (= |H2| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv15414357923146528480 64) (_ bv15414357923146528480 64)) (= |H1| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv12907376018726906803 64) (_ bv12907376018726906803 64)) (= |H3| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv7988235313857873170 64) (_ bv7988235313857873170 64)) (= |H0| (_ bv18446744069414584320 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv7988235313857873170 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15414357923146528480 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13488709479459236548 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12907376018726906803 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10378424267194164228 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2035030933205852364 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13682311703351893555 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv9255675695291548494 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11928885137655109461 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv12589749694452062845 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2035030933205852364 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv7988235313857873170 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv9255675695291548494 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv10378424267194164228 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv11928885137655109461 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv12589749694452062845 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv12907376018726906803 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv13488709479459236548 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv13682311703351893555 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv15414357923146528480 64) ) (_ bv18446744069414584320 64))) (and (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv12589749694452062845 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv11928885137655109461 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9255675695291548494 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13682311703351893555 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv2035030933205852364 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv10378424267194164228 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv12907376018726906803 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13488709479459236548 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv15414357923146528480 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv7988235313857873170 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
        1.23 real         0.44 user         0.08 sys
