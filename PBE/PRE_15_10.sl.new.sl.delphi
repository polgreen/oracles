Fri 21 May 2021 15:53:52 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16303366456568787678 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15666073583233178859 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv9604446543166914144 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv17170978295147848192 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv3280215338847705821 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8496332143018597092 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9085037223915281418 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13280444011288375876 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14215500089592201429 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3316585808925549804 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv3316585808925549804 64) )) (= (_ bv0 64) (ref (_ bv14215500089592201429 64) )) (= (_ bv0 64) (ref (_ bv13280444011288375876 64) )) (= (_ bv0 64) (ref (_ bv9085037223915281418 64) )) (= (_ bv0 64) (ref (_ bv8496332143018597092 64) )) (= (_ bv0 64) (ref (_ bv3280215338847705821 64) )) (= (_ bv0 64) (ref (_ bv17170978295147848192 64) )) (= (_ bv0 64) (ref (_ bv9604446543166914144 64) )) (= (_ bv0 64) (ref (_ bv15666073583233178859 64) )) (= (_ bv0 64) (ref (_ bv16303366456568787678 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16303366456568787678 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15666073583233178859 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv9604446543166914144 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv17170978295147848192 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv3280215338847705821 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8496332143018597092 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9085037223915281418 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13280444011288375876 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14215500089592201429 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3316585808925549804 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv3316585808925549804 64) )) (= (_ bv0 64) (ref (_ bv14215500089592201429 64) )) (= (_ bv0 64) (ref (_ bv13280444011288375876 64) )) (= (_ bv0 64) (ref (_ bv9085037223915281418 64) )) (= (_ bv0 64) (ref (_ bv8496332143018597092 64) )) (= (_ bv0 64) (ref (_ bv3280215338847705821 64) )) (= (_ bv0 64) (ref (_ bv17170978295147848192 64) )) (= (_ bv0 64) (ref (_ bv9604446543166914144 64) )) (= (_ bv0 64) (ref (_ bv15666073583233178859 64) )) (= (_ bv0 64) (ref (_ bv16303366456568787678 64) )))))

; set_to true
(assert (=> (= (_ bv3316585808925549804 64) (_ bv3316585808925549804 64)) (= |H9| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv14215500089592201429 64) (_ bv14215500089592201429 64)) (= |H8| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv13280444011288375876 64) (_ bv13280444011288375876 64)) (= |H7| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv9085037223915281418 64) (_ bv9085037223915281418 64)) (= |H6| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv8496332143018597092 64) (_ bv8496332143018597092 64)) (= |H5| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv3280215338847705821 64) (_ bv3280215338847705821 64)) (= |H4| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv9604446543166914144 64) (_ bv9604446543166914144 64)) (= |H2| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv15666073583233178859 64) (_ bv15666073583233178859 64)) (= |H1| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv17170978295147848192 64) (_ bv17170978295147848192 64)) (= |H3| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv16303366456568787678 64) (_ bv16303366456568787678 64)) (= |H0| (_ bv4294967294 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> 1 ^ (~0 >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv16303366456568787678 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv15666073583233178859 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv9604446543166914144 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv17170978295147848192 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv3280215338847705821 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8496332143018597092 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv9085037223915281418 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13280444011288375876 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv14215500089592201429 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv3316585808925549804 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv3280215338847705821 64) ) (_ bv4294967294 64)) (= (ref (_ bv3316585808925549804 64) ) (_ bv4294967294 64)) (= (ref (_ bv8496332143018597092 64) ) (_ bv4294967294 64)) (= (ref (_ bv9085037223915281418 64) ) (_ bv4294967294 64)) (= (ref (_ bv9604446543166914144 64) ) (_ bv4294967294 64)) (= (ref (_ bv13280444011288375876 64) ) (_ bv4294967294 64)) (= (ref (_ bv14215500089592201429 64) ) (_ bv4294967294 64)) (= (ref (_ bv15666073583233178859 64) ) (_ bv4294967294 64)) (= (ref (_ bv16303366456568787678 64) ) (_ bv4294967294 64)) (= (ref (_ bv17170978295147848192 64) ) (_ bv4294967294 64))) (and (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv3316585808925549804 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv14215500089592201429 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13280444011288375876 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9085037223915281418 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv8496332143018597092 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv3280215338847705821 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv17170978295147848192 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9604446543166914144 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv15666073583233178859 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv16303366456568787678 64) ))))))

Verification passed
SOLUTION:
f  =  (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
        1.57 real         1.00 user         0.06 sys
