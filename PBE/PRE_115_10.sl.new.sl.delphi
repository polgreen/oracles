Fri 21 May 2021 15:45:10 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15095140427328970843 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv10284226004412970759 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11538438971283128982 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv4653813869419456491 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4502594565719509537 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5086573966530810816 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13757608229173802411 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16440088427846353518 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11841115009481893794 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4644128983918421630 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4644128983918421630 64) )) (= (_ bv0 64) (ref (_ bv11841115009481893794 64) )) (= (_ bv0 64) (ref (_ bv16440088427846353518 64) )) (= (_ bv0 64) (ref (_ bv13757608229173802411 64) )) (= (_ bv0 64) (ref (_ bv5086573966530810816 64) )) (= (_ bv0 64) (ref (_ bv4502594565719509537 64) )) (= (_ bv0 64) (ref (_ bv4653813869419456491 64) )) (= (_ bv0 64) (ref (_ bv11538438971283128982 64) )) (= (_ bv0 64) (ref (_ bv10284226004412970759 64) )) (= (_ bv0 64) (ref (_ bv15095140427328970843 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15095140427328970843 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv10284226004412970759 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11538438971283128982 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv4653813869419456491 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4502594565719509537 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5086573966530810816 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13757608229173802411 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16440088427846353518 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11841115009481893794 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4644128983918421630 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4644128983918421630 64) )) (= (_ bv0 64) (ref (_ bv11841115009481893794 64) )) (= (_ bv0 64) (ref (_ bv16440088427846353518 64) )) (= (_ bv0 64) (ref (_ bv13757608229173802411 64) )) (= (_ bv0 64) (ref (_ bv5086573966530810816 64) )) (= (_ bv0 64) (ref (_ bv4502594565719509537 64) )) (= (_ bv0 64) (ref (_ bv4653813869419456491 64) )) (= (_ bv0 64) (ref (_ bv11538438971283128982 64) )) (= (_ bv0 64) (ref (_ bv10284226004412970759 64) )) (= (_ bv0 64) (ref (_ bv15095140427328970843 64) )))))

; set_to true
(assert (=> (= (_ bv4644128983918421630 64) (_ bv4644128983918421630 64)) (= |H9| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv11841115009481893794 64) (_ bv11841115009481893794 64)) (= |H8| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv16440088427846353518 64) (_ bv16440088427846353518 64)) (= |H7| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv13757608229173802411 64) (_ bv13757608229173802411 64)) (= |H6| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv5086573966530810816 64) (_ bv5086573966530810816 64)) (= |H5| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv4502594565719509537 64) (_ bv4502594565719509537 64)) (= |H4| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv11538438971283128982 64) (_ bv11538438971283128982 64)) (= |H2| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv10284226004412970759 64) (_ bv10284226004412970759 64)) (= |H1| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv4653813869419456491 64) (_ bv4653813869419456491 64)) (= |H3| (_ bv2147483647 64))))

; set_to true
(assert (=> (= (_ bv15095140427328970843 64) (_ bv15095140427328970843 64)) (= |H0| (_ bv2147483647 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15095140427328970843 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv10284226004412970759 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11538438971283128982 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv4653813869419456491 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4502594565719509537 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5086573966530810816 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv13757608229173802411 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16440088427846353518 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11841115009481893794 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4644128983918421630 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv4502594565719509537 64) ) (_ bv2147483647 64)) (= (ref (_ bv4644128983918421630 64) ) (_ bv2147483647 64)) (= (ref (_ bv4653813869419456491 64) ) (_ bv2147483647 64)) (= (ref (_ bv5086573966530810816 64) ) (_ bv2147483647 64)) (= (ref (_ bv10284226004412970759 64) ) (_ bv2147483647 64)) (= (ref (_ bv11538438971283128982 64) ) (_ bv2147483647 64)) (= (ref (_ bv11841115009481893794 64) ) (_ bv2147483647 64)) (= (ref (_ bv13757608229173802411 64) ) (_ bv2147483647 64)) (= (ref (_ bv15095140427328970843 64) ) (_ bv2147483647 64)) (= (ref (_ bv16440088427846353518 64) ) (_ bv2147483647 64))) (and (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4644128983918421630 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv11841115009481893794 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16440088427846353518 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv13757608229173802411 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv5086573966530810816 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4502594565719509537 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4653813869419456491 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv11538438971283128982 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv10284226004412970759 64) )) (= (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv15095140427328970843 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv1 64)) (_ bv16 64)) (_ bv16 64))
        0.75 real         0.45 user         0.06 sys
