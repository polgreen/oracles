Fri 21 May 2021 16:04:31 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv9106948834320995080 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3162483916516891854 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13715925000447661932 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv14432412752693183882 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv13529345270372261532 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9360286991119411821 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8898665205728522413 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6220330722466721376 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16897111655753103121 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7555319561593846332 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv7555319561593846332 64) )) (= (_ bv0 64) (ref (_ bv16897111655753103121 64) )) (= (_ bv0 64) (ref (_ bv6220330722466721376 64) )) (= (_ bv0 64) (ref (_ bv8898665205728522413 64) )) (= (_ bv0 64) (ref (_ bv9360286991119411821 64) )) (= (_ bv0 64) (ref (_ bv13529345270372261532 64) )) (= (_ bv0 64) (ref (_ bv14432412752693183882 64) )) (= (_ bv0 64) (ref (_ bv13715925000447661932 64) )) (= (_ bv0 64) (ref (_ bv3162483916516891854 64) )) (= (_ bv0 64) (ref (_ bv9106948834320995080 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv9106948834320995080 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3162483916516891854 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13715925000447661932 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv14432412752693183882 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv13529345270372261532 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9360286991119411821 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8898665205728522413 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6220330722466721376 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16897111655753103121 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7555319561593846332 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv7555319561593846332 64) )) (= (_ bv0 64) (ref (_ bv16897111655753103121 64) )) (= (_ bv0 64) (ref (_ bv6220330722466721376 64) )) (= (_ bv0 64) (ref (_ bv8898665205728522413 64) )) (= (_ bv0 64) (ref (_ bv9360286991119411821 64) )) (= (_ bv0 64) (ref (_ bv13529345270372261532 64) )) (= (_ bv0 64) (ref (_ bv14432412752693183882 64) )) (= (_ bv0 64) (ref (_ bv13715925000447661932 64) )) (= (_ bv0 64) (ref (_ bv3162483916516891854 64) )) (= (_ bv0 64) (ref (_ bv9106948834320995080 64) )))))

; set_to true
(assert (=> (= (_ bv7555319561593846332 64) (_ bv7555319561593846332 64)) (= |H9| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv16897111655753103121 64) (_ bv16897111655753103121 64)) (= |H8| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv6220330722466721376 64) (_ bv6220330722466721376 64)) (= |H7| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv8898665205728522413 64) (_ bv8898665205728522413 64)) (= |H6| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv9360286991119411821 64) (_ bv9360286991119411821 64)) (= |H5| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv13529345270372261532 64) (_ bv13529345270372261532 64)) (= |H4| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv13715925000447661932 64) (_ bv13715925000447661932 64)) (= |H2| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv3162483916516891854 64) (_ bv3162483916516891854 64)) (= |H1| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv14432412752693183882 64) (_ bv14432412752693183882 64)) (= |H3| (_ bv4294967294 64))))

; set_to true
(assert (=> (= (_ bv9106948834320995080 64) (_ bv9106948834320995080 64)) (= |H0| (_ bv4294967294 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> 1 ^ (~0 >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv9106948834320995080 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3162483916516891854 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13715925000447661932 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv14432412752693183882 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv13529345270372261532 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9360286991119411821 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8898665205728522413 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6220330722466721376 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16897111655753103121 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7555319561593846332 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv3162483916516891854 64) ) (_ bv4294967294 64)) (= (ref (_ bv6220330722466721376 64) ) (_ bv4294967294 64)) (= (ref (_ bv7555319561593846332 64) ) (_ bv4294967294 64)) (= (ref (_ bv8898665205728522413 64) ) (_ bv4294967294 64)) (= (ref (_ bv9106948834320995080 64) ) (_ bv4294967294 64)) (= (ref (_ bv9360286991119411821 64) ) (_ bv4294967294 64)) (= (ref (_ bv13529345270372261532 64) ) (_ bv4294967294 64)) (= (ref (_ bv13715925000447661932 64) ) (_ bv4294967294 64)) (= (ref (_ bv14432412752693183882 64) ) (_ bv4294967294 64)) (= (ref (_ bv16897111655753103121 64) ) (_ bv4294967294 64))) (and (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv7555319561593846332 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv16897111655753103121 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv6220330722466721376 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv8898665205728522413 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9360286991119411821 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13529345270372261532 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv14432412752693183882 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13715925000447661932 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv3162483916516891854 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9106948834320995080 64) ))))))

Verification passed
SOLUTION:
f  =  (bvxor (_ bv1 64) (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
        1.24 real         0.92 user         0.06 sys
