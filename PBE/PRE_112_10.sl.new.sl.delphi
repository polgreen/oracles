Fri 21 May 2021 15:45:03 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv11632127030053834003 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv8800817687380536168 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv425154937528027454 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3943966564013117122 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv9126637131017139540 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv15587365943996281799 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8617928339548186981 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv11952578566755851722 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11423778192389434952 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8703622414068115027 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv8703622414068115027 64) )) (= (_ bv0 64) (ref (_ bv11423778192389434952 64) )) (= (_ bv0 64) (ref (_ bv11952578566755851722 64) )) (= (_ bv0 64) (ref (_ bv8617928339548186981 64) )) (= (_ bv0 64) (ref (_ bv15587365943996281799 64) )) (= (_ bv0 64) (ref (_ bv9126637131017139540 64) )) (= (_ bv0 64) (ref (_ bv3943966564013117122 64) )) (= (_ bv0 64) (ref (_ bv425154937528027454 64) )) (= (_ bv0 64) (ref (_ bv8800817687380536168 64) )) (= (_ bv0 64) (ref (_ bv11632127030053834003 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv11632127030053834003 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv8800817687380536168 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv425154937528027454 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3943966564013117122 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv9126637131017139540 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv15587365943996281799 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8617928339548186981 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv11952578566755851722 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11423778192389434952 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8703622414068115027 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv8703622414068115027 64) )) (= (_ bv0 64) (ref (_ bv11423778192389434952 64) )) (= (_ bv0 64) (ref (_ bv11952578566755851722 64) )) (= (_ bv0 64) (ref (_ bv8617928339548186981 64) )) (= (_ bv0 64) (ref (_ bv15587365943996281799 64) )) (= (_ bv0 64) (ref (_ bv9126637131017139540 64) )) (= (_ bv0 64) (ref (_ bv3943966564013117122 64) )) (= (_ bv0 64) (ref (_ bv425154937528027454 64) )) (= (_ bv0 64) (ref (_ bv8800817687380536168 64) )) (= (_ bv0 64) (ref (_ bv11632127030053834003 64) )))))

; set_to true
(assert (=> (= (_ bv8703622414068115027 64) (_ bv8703622414068115027 64)) (= |H9| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv11423778192389434952 64) (_ bv11423778192389434952 64)) (= |H8| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv11952578566755851722 64) (_ bv11952578566755851722 64)) (= |H7| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv8617928339548186981 64) (_ bv8617928339548186981 64)) (= |H6| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv15587365943996281799 64) (_ bv15587365943996281799 64)) (= |H5| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv9126637131017139540 64) (_ bv9126637131017139540 64)) (= |H4| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv425154937528027454 64) (_ bv425154937528027454 64)) (= |H2| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv8800817687380536168 64) (_ bv8800817687380536168 64)) (= |H1| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv3943966564013117122 64) (_ bv3943966564013117122 64)) (= |H3| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv11632127030053834003 64) (_ bv11632127030053834003 64)) (= |H0| (_ bv8589934591 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv11632127030053834003 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv8800817687380536168 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv425154937528027454 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3943966564013117122 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv9126637131017139540 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv15587365943996281799 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8617928339548186981 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv11952578566755851722 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv11423778192389434952 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8703622414068115027 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv3943966564013117122 64) ) (_ bv8589934591 64)) (= (ref (_ bv425154937528027454 64) ) (_ bv8589934591 64)) (= (ref (_ bv8617928339548186981 64) ) (_ bv8589934591 64)) (= (ref (_ bv8703622414068115027 64) ) (_ bv8589934591 64)) (= (ref (_ bv8800817687380536168 64) ) (_ bv8589934591 64)) (= (ref (_ bv9126637131017139540 64) ) (_ bv8589934591 64)) (= (ref (_ bv11423778192389434952 64) ) (_ bv8589934591 64)) (= (ref (_ bv11632127030053834003 64) ) (_ bv8589934591 64)) (= (ref (_ bv11952578566755851722 64) ) (_ bv8589934591 64)) (= (ref (_ bv15587365943996281799 64) ) (_ bv8589934591 64))) (and (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv8703622414068115027 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11423778192389434952 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11952578566755851722 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv8617928339548186981 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv15587365943996281799 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv9126637131017139540 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv3943966564013117122 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv425154937528027454 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv8800817687380536168 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11632127030053834003 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
        0.82 real         0.42 user         0.06 sys
