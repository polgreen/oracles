Fri 21 May 2021 15:41:41 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv14801006902853261150 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5503087301951352445 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv8495403160809471127 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv5309441209102782176 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4125737484381395366 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4641422065977399174 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12419550490547940112 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16301137356166841166 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13714377577746532169 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2884655166153548076 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2884655166153548076 64) )) (= (_ bv0 64) (ref (_ bv13714377577746532169 64) )) (= (_ bv0 64) (ref (_ bv16301137356166841166 64) )) (= (_ bv0 64) (ref (_ bv12419550490547940112 64) )) (= (_ bv0 64) (ref (_ bv4641422065977399174 64) )) (= (_ bv0 64) (ref (_ bv4125737484381395366 64) )) (= (_ bv0 64) (ref (_ bv5309441209102782176 64) )) (= (_ bv0 64) (ref (_ bv8495403160809471127 64) )) (= (_ bv0 64) (ref (_ bv5503087301951352445 64) )) (= (_ bv0 64) (ref (_ bv14801006902853261150 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv14801006902853261150 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5503087301951352445 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv8495403160809471127 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv5309441209102782176 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4125737484381395366 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4641422065977399174 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12419550490547940112 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16301137356166841166 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13714377577746532169 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2884655166153548076 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2884655166153548076 64) )) (= (_ bv0 64) (ref (_ bv13714377577746532169 64) )) (= (_ bv0 64) (ref (_ bv16301137356166841166 64) )) (= (_ bv0 64) (ref (_ bv12419550490547940112 64) )) (= (_ bv0 64) (ref (_ bv4641422065977399174 64) )) (= (_ bv0 64) (ref (_ bv4125737484381395366 64) )) (= (_ bv0 64) (ref (_ bv5309441209102782176 64) )) (= (_ bv0 64) (ref (_ bv8495403160809471127 64) )) (= (_ bv0 64) (ref (_ bv5503087301951352445 64) )) (= (_ bv0 64) (ref (_ bv14801006902853261150 64) )))))

; set_to true
(assert (=> (= (_ bv2884655166153548076 64) (_ bv2884655166153548076 64)) (= |H9| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv13714377577746532169 64) (_ bv13714377577746532169 64)) (= |H8| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv16301137356166841166 64) (_ bv16301137356166841166 64)) (= |H7| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv12419550490547940112 64) (_ bv12419550490547940112 64)) (= |H6| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv4641422065977399174 64) (_ bv4641422065977399174 64)) (= |H5| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv4125737484381395366 64) (_ bv4125737484381395366 64)) (= |H4| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv8495403160809471127 64) (_ bv8495403160809471127 64)) (= |H2| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv5503087301951352445 64) (_ bv5503087301951352445 64)) (= |H1| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv5309441209102782176 64) (_ bv5309441209102782176 64)) (= |H3| (_ bv4294967295 64))))

; set_to true
(assert (=> (= (_ bv14801006902853261150 64) (_ bv14801006902853261150 64)) (= |H0| (_ bv4294967295 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv14801006902853261150 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5503087301951352445 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv8495403160809471127 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv5309441209102782176 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv4125737484381395366 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4641422065977399174 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12419550490547940112 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16301137356166841166 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13714377577746532169 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2884655166153548076 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2884655166153548076 64) ) (_ bv4294967295 64)) (= (ref (_ bv4125737484381395366 64) ) (_ bv4294967295 64)) (= (ref (_ bv4641422065977399174 64) ) (_ bv4294967295 64)) (= (ref (_ bv5309441209102782176 64) ) (_ bv4294967295 64)) (= (ref (_ bv5503087301951352445 64) ) (_ bv4294967295 64)) (= (ref (_ bv8495403160809471127 64) ) (_ bv4294967295 64)) (= (ref (_ bv12419550490547940112 64) ) (_ bv4294967295 64)) (= (ref (_ bv13714377577746532169 64) ) (_ bv4294967295 64)) (= (ref (_ bv14801006902853261150 64) ) (_ bv4294967295 64)) (= (ref (_ bv16301137356166841166 64) ) (_ bv4294967295 64))) (and (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv2884655166153548076 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv13714377577746532169 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16301137356166841166 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv12419550490547940112 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4641422065977399174 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv4125737484381395366 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv5309441209102782176 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv8495403160809471127 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv5503087301951352445 64) )) (= (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (ref (_ bv14801006902853261150 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))
        0.50 real         0.11 user         0.05 sys
