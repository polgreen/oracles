Fri 21 May 2021 16:06:43 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv3196792253545965892 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11294389627635754334 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1880979515294388422 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6382020049177533572 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17126537218087640596 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5155287359358173412 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1630391481815018126 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv1695069625322277124 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16348110086197903964 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11046913339008367216 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11046913339008367216 64) )) (= (_ bv0 64) (ref (_ bv16348110086197903964 64) )) (= (_ bv0 64) (ref (_ bv1695069625322277124 64) )) (= (_ bv0 64) (ref (_ bv1630391481815018126 64) )) (= (_ bv0 64) (ref (_ bv5155287359358173412 64) )) (= (_ bv0 64) (ref (_ bv17126537218087640596 64) )) (= (_ bv0 64) (ref (_ bv6382020049177533572 64) )) (= (_ bv0 64) (ref (_ bv1880979515294388422 64) )) (= (_ bv0 64) (ref (_ bv11294389627635754334 64) )) (= (_ bv0 64) (ref (_ bv3196792253545965892 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv3196792253545965892 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11294389627635754334 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1880979515294388422 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6382020049177533572 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17126537218087640596 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5155287359358173412 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1630391481815018126 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv1695069625322277124 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16348110086197903964 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11046913339008367216 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11046913339008367216 64) )) (= (_ bv0 64) (ref (_ bv16348110086197903964 64) )) (= (_ bv0 64) (ref (_ bv1695069625322277124 64) )) (= (_ bv0 64) (ref (_ bv1630391481815018126 64) )) (= (_ bv0 64) (ref (_ bv5155287359358173412 64) )) (= (_ bv0 64) (ref (_ bv17126537218087640596 64) )) (= (_ bv0 64) (ref (_ bv6382020049177533572 64) )) (= (_ bv0 64) (ref (_ bv1880979515294388422 64) )) (= (_ bv0 64) (ref (_ bv11294389627635754334 64) )) (= (_ bv0 64) (ref (_ bv3196792253545965892 64) )))))

; set_to true
(assert (=> (= (_ bv11046913339008367216 64) (_ bv11046913339008367216 64)) (= |H9| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv16348110086197903964 64) (_ bv16348110086197903964 64)) (= |H8| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1695069625322277124 64) (_ bv1695069625322277124 64)) (= |H7| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1630391481815018126 64) (_ bv1630391481815018126 64)) (= |H6| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv5155287359358173412 64) (_ bv5155287359358173412 64)) (= |H5| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv17126537218087640596 64) (_ bv17126537218087640596 64)) (= |H4| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1880979515294388422 64) (_ bv1880979515294388422 64)) (= |H2| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv11294389627635754334 64) (_ bv11294389627635754334 64)) (= |H1| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv6382020049177533572 64) (_ bv6382020049177533572 64)) (= |H3| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv3196792253545965892 64) (_ bv3196792253545965892 64)) (= |H0| (_ bv8589934591 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> ((~0 >> 16) << 1) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv3196792253545965892 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11294389627635754334 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1880979515294388422 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv6382020049177533572 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17126537218087640596 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv5155287359358173412 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1630391481815018126 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv1695069625322277124 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16348110086197903964 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11046913339008367216 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1630391481815018126 64) ) (_ bv8589934591 64)) (= (ref (_ bv1695069625322277124 64) ) (_ bv8589934591 64)) (= (ref (_ bv1880979515294388422 64) ) (_ bv8589934591 64)) (= (ref (_ bv3196792253545965892 64) ) (_ bv8589934591 64)) (= (ref (_ bv5155287359358173412 64) ) (_ bv8589934591 64)) (= (ref (_ bv6382020049177533572 64) ) (_ bv8589934591 64)) (= (ref (_ bv11046913339008367216 64) ) (_ bv8589934591 64)) (= (ref (_ bv11294389627635754334 64) ) (_ bv8589934591 64)) (= (ref (_ bv16348110086197903964 64) ) (_ bv8589934591 64)) (= (ref (_ bv17126537218087640596 64) ) (_ bv8589934591 64))) (and (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11046913339008367216 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv16348110086197903964 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1695069625322277124 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1630391481815018126 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv5155287359358173412 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv17126537218087640596 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv6382020049177533572 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1880979515294388422 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11294389627635754334 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv3196792253545965892 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
        0.61 real         0.30 user         0.05 sys
