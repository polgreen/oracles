Fri 21 May 2021 16:12:32 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12407487636631100556 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14017432609679272837 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12053423004092064274 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12473711195579437524 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv11352902195791945197 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16609950876356719016 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8467344756716313479 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16898293457574175869 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5326116673400968739 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2011004060200605762 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2011004060200605762 64) )) (= (_ bv0 64) (ref (_ bv5326116673400968739 64) )) (= (_ bv0 64) (ref (_ bv16898293457574175869 64) )) (= (_ bv0 64) (ref (_ bv8467344756716313479 64) )) (= (_ bv0 64) (ref (_ bv16609950876356719016 64) )) (= (_ bv0 64) (ref (_ bv11352902195791945197 64) )) (= (_ bv0 64) (ref (_ bv12473711195579437524 64) )) (= (_ bv0 64) (ref (_ bv12053423004092064274 64) )) (= (_ bv0 64) (ref (_ bv14017432609679272837 64) )) (= (_ bv0 64) (ref (_ bv12407487636631100556 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12407487636631100556 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14017432609679272837 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12053423004092064274 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12473711195579437524 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv11352902195791945197 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16609950876356719016 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8467344756716313479 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16898293457574175869 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5326116673400968739 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2011004060200605762 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2011004060200605762 64) )) (= (_ bv0 64) (ref (_ bv5326116673400968739 64) )) (= (_ bv0 64) (ref (_ bv16898293457574175869 64) )) (= (_ bv0 64) (ref (_ bv8467344756716313479 64) )) (= (_ bv0 64) (ref (_ bv16609950876356719016 64) )) (= (_ bv0 64) (ref (_ bv11352902195791945197 64) )) (= (_ bv0 64) (ref (_ bv12473711195579437524 64) )) (= (_ bv0 64) (ref (_ bv12053423004092064274 64) )) (= (_ bv0 64) (ref (_ bv14017432609679272837 64) )) (= (_ bv0 64) (ref (_ bv12407487636631100556 64) )))))

; set_to true
(assert (=> (= (_ bv2011004060200605762 64) (_ bv2011004060200605762 64)) (= |H9| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv5326116673400968739 64) (_ bv5326116673400968739 64)) (= |H8| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv16898293457574175869 64) (_ bv16898293457574175869 64)) (= |H7| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv8467344756716313479 64) (_ bv8467344756716313479 64)) (= |H6| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv16609950876356719016 64) (_ bv16609950876356719016 64)) (= |H5| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv11352902195791945197 64) (_ bv11352902195791945197 64)) (= |H4| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv12053423004092064274 64) (_ bv12053423004092064274 64)) (= |H2| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv14017432609679272837 64) (_ bv14017432609679272837 64)) (= |H1| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv12473711195579437524 64) (_ bv12473711195579437524 64)) (= |H3| (_ bv8589934590 64))))

; set_to true
(assert (=> (= (_ bv12407487636631100556 64) (_ bv12407487636631100556 64)) (= |H0| (_ bv8589934590 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> ((~0 >> 16) >> 16) << 1
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12407487636631100556 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14017432609679272837 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12053423004092064274 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv12473711195579437524 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv11352902195791945197 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16609950876356719016 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8467344756716313479 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16898293457574175869 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv5326116673400968739 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2011004060200605762 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2011004060200605762 64) ) (_ bv8589934590 64)) (= (ref (_ bv5326116673400968739 64) ) (_ bv8589934590 64)) (= (ref (_ bv8467344756716313479 64) ) (_ bv8589934590 64)) (= (ref (_ bv11352902195791945197 64) ) (_ bv8589934590 64)) (= (ref (_ bv12053423004092064274 64) ) (_ bv8589934590 64)) (= (ref (_ bv12407487636631100556 64) ) (_ bv8589934590 64)) (= (ref (_ bv12473711195579437524 64) ) (_ bv8589934590 64)) (= (ref (_ bv14017432609679272837 64) ) (_ bv8589934590 64)) (= (ref (_ bv16609950876356719016 64) ) (_ bv8589934590 64)) (= (ref (_ bv16898293457574175869 64) ) (_ bv8589934590 64))) (and (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv2011004060200605762 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv5326116673400968739 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv16898293457574175869 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv8467344756716313479 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv16609950876356719016 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv11352902195791945197 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv12473711195579437524 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv12053423004092064274 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv14017432609679272837 64) )) (= (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)) (ref (_ bv12407487636631100556 64) ))))))

Verification passed
SOLUTION:
f  =  (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))
        0.73 real         0.41 user         0.06 sys
