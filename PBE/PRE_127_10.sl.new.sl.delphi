Fri 21 May 2021 15:47:29 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv8549817069341376949 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv10079696535163135910 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv16559989076196558933 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv1338331364656466807 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv16973748460348710982 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2709042001510516258 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1621873503330767542 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2032254641552914120 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16742696394061200171 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv16333104908876036588 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv16333104908876036588 64) )) (= (_ bv0 64) (ref (_ bv16742696394061200171 64) )) (= (_ bv0 64) (ref (_ bv2032254641552914120 64) )) (= (_ bv0 64) (ref (_ bv1621873503330767542 64) )) (= (_ bv0 64) (ref (_ bv2709042001510516258 64) )) (= (_ bv0 64) (ref (_ bv16973748460348710982 64) )) (= (_ bv0 64) (ref (_ bv1338331364656466807 64) )) (= (_ bv0 64) (ref (_ bv16559989076196558933 64) )) (= (_ bv0 64) (ref (_ bv10079696535163135910 64) )) (= (_ bv0 64) (ref (_ bv8549817069341376949 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv8549817069341376949 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv10079696535163135910 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv16559989076196558933 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv1338331364656466807 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv16973748460348710982 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2709042001510516258 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1621873503330767542 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2032254641552914120 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv16742696394061200171 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv16333104908876036588 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv16333104908876036588 64) )) (= (_ bv0 64) (ref (_ bv16742696394061200171 64) )) (= (_ bv0 64) (ref (_ bv2032254641552914120 64) )) (= (_ bv0 64) (ref (_ bv1621873503330767542 64) )) (= (_ bv0 64) (ref (_ bv2709042001510516258 64) )) (= (_ bv0 64) (ref (_ bv16973748460348710982 64) )) (= (_ bv0 64) (ref (_ bv1338331364656466807 64) )) (= (_ bv0 64) (ref (_ bv16559989076196558933 64) )) (= (_ bv0 64) (ref (_ bv10079696535163135910 64) )) (= (_ bv0 64) (ref (_ bv8549817069341376949 64) )))))

; set_to true
(assert (=> (= (_ bv16333104908876036588 64) (_ bv16333104908876036588 64)) (= |H9| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv16742696394061200171 64) (_ bv16742696394061200171 64)) (= |H8| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv2032254641552914120 64) (_ bv2032254641552914120 64)) (= |H7| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv1621873503330767542 64) (_ bv1621873503330767542 64)) (= |H6| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv2709042001510516258 64) (_ bv2709042001510516258 64)) (= |H5| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv16973748460348710982 64) (_ bv16973748460348710982 64)) (= |H4| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv16559989076196558933 64) (_ bv16559989076196558933 64)) (= |H2| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv10079696535163135910 64) (_ bv10079696535163135910 64)) (= |H1| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv1338331364656466807 64) (_ bv1338331364656466807 64)) (= |H3| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv8549817069341376949 64) (_ bv8549817069341376949 64)) (= |H0| (_ bv0 64))))

Verification passed
SOLUTION:
f  =  (_ bv0 64)
        0.40 real         0.07 user         0.04 sys
