Fri 21 May 2021 15:47:30 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12509047183251465917 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7200711847056106256 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15906969560815391694 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13437065154473445717 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1072658302185133065 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4285260900623714466 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1833300291520032277 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv10631488173218531779 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv12505878298008410046 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4386088561645379859 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4386088561645379859 64) )) (= (_ bv0 64) (ref (_ bv12505878298008410046 64) )) (= (_ bv0 64) (ref (_ bv10631488173218531779 64) )) (= (_ bv0 64) (ref (_ bv1833300291520032277 64) )) (= (_ bv0 64) (ref (_ bv4285260900623714466 64) )) (= (_ bv0 64) (ref (_ bv1072658302185133065 64) )) (= (_ bv0 64) (ref (_ bv13437065154473445717 64) )) (= (_ bv0 64) (ref (_ bv15906969560815391694 64) )) (= (_ bv0 64) (ref (_ bv7200711847056106256 64) )) (= (_ bv0 64) (ref (_ bv12509047183251465917 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12509047183251465917 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7200711847056106256 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15906969560815391694 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13437065154473445717 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1072658302185133065 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4285260900623714466 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1833300291520032277 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv10631488173218531779 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv12505878298008410046 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4386088561645379859 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4386088561645379859 64) )) (= (_ bv0 64) (ref (_ bv12505878298008410046 64) )) (= (_ bv0 64) (ref (_ bv10631488173218531779 64) )) (= (_ bv0 64) (ref (_ bv1833300291520032277 64) )) (= (_ bv0 64) (ref (_ bv4285260900623714466 64) )) (= (_ bv0 64) (ref (_ bv1072658302185133065 64) )) (= (_ bv0 64) (ref (_ bv13437065154473445717 64) )) (= (_ bv0 64) (ref (_ bv15906969560815391694 64) )) (= (_ bv0 64) (ref (_ bv7200711847056106256 64) )) (= (_ bv0 64) (ref (_ bv12509047183251465917 64) )))))

; set_to true
(assert (=> (= (_ bv4386088561645379859 64) (_ bv4386088561645379859 64)) (= |H9| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv12505878298008410046 64) (_ bv12505878298008410046 64)) (= |H8| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv10631488173218531779 64) (_ bv10631488173218531779 64)) (= |H7| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1833300291520032277 64) (_ bv1833300291520032277 64)) (= |H6| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv4285260900623714466 64) (_ bv4285260900623714466 64)) (= |H5| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1072658302185133065 64) (_ bv1072658302185133065 64)) (= |H4| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv15906969560815391694 64) (_ bv15906969560815391694 64)) (= |H2| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv7200711847056106256 64) (_ bv7200711847056106256 64)) (= |H1| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv13437065154473445717 64) (_ bv13437065154473445717 64)) (= |H3| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv12509047183251465917 64) (_ bv12509047183251465917 64)) (= |H0| (_ bv8589934591 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12509047183251465917 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7200711847056106256 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15906969560815391694 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13437065154473445717 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1072658302185133065 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv4285260900623714466 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1833300291520032277 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv10631488173218531779 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv12505878298008410046 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4386088561645379859 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1833300291520032277 64) ) (_ bv8589934591 64)) (= (ref (_ bv4285260900623714466 64) ) (_ bv8589934591 64)) (= (ref (_ bv4386088561645379859 64) ) (_ bv8589934591 64)) (= (ref (_ bv7200711847056106256 64) ) (_ bv8589934591 64)) (= (ref (_ bv10631488173218531779 64) ) (_ bv8589934591 64)) (= (ref (_ bv12505878298008410046 64) ) (_ bv8589934591 64)) (= (ref (_ bv12509047183251465917 64) ) (_ bv8589934591 64)) (= (ref (_ bv13437065154473445717 64) ) (_ bv8589934591 64)) (= (ref (_ bv15906969560815391694 64) ) (_ bv8589934591 64)) (= (ref (_ bv1072658302185133065 64) ) (_ bv8589934591 64))) (and (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv4386088561645379859 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv12505878298008410046 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv10631488173218531779 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1833300291520032277 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv4285260900623714466 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1072658302185133065 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv13437065154473445717 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv15906969560815391694 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv7200711847056106256 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv12509047183251465917 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
        0.72 real         0.41 user         0.05 sys
