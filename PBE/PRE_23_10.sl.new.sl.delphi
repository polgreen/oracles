Fri 21 May 2021 15:55:09 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv8709624960948506803 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11340964582085856861 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15301059230128905451 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16291023804077230134 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv377744083974372921 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10405249092449044325 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1047047482162402147 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2114446846299276163 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13996572127027071609 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11634916515633359235 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11634916515633359235 64) )) (= (_ bv0 64) (ref (_ bv13996572127027071609 64) )) (= (_ bv0 64) (ref (_ bv2114446846299276163 64) )) (= (_ bv0 64) (ref (_ bv1047047482162402147 64) )) (= (_ bv0 64) (ref (_ bv10405249092449044325 64) )) (= (_ bv0 64) (ref (_ bv377744083974372921 64) )) (= (_ bv0 64) (ref (_ bv16291023804077230134 64) )) (= (_ bv0 64) (ref (_ bv15301059230128905451 64) )) (= (_ bv0 64) (ref (_ bv11340964582085856861 64) )) (= (_ bv0 64) (ref (_ bv8709624960948506803 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv8709624960948506803 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11340964582085856861 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15301059230128905451 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16291023804077230134 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv377744083974372921 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10405249092449044325 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1047047482162402147 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2114446846299276163 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13996572127027071609 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11634916515633359235 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11634916515633359235 64) )) (= (_ bv0 64) (ref (_ bv13996572127027071609 64) )) (= (_ bv0 64) (ref (_ bv2114446846299276163 64) )) (= (_ bv0 64) (ref (_ bv1047047482162402147 64) )) (= (_ bv0 64) (ref (_ bv10405249092449044325 64) )) (= (_ bv0 64) (ref (_ bv377744083974372921 64) )) (= (_ bv0 64) (ref (_ bv16291023804077230134 64) )) (= (_ bv0 64) (ref (_ bv15301059230128905451 64) )) (= (_ bv0 64) (ref (_ bv11340964582085856861 64) )) (= (_ bv0 64) (ref (_ bv8709624960948506803 64) )))))

; set_to true
(assert (=> (= (_ bv11634916515633359235 64) (_ bv11634916515633359235 64)) (= |H9| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv13996572127027071609 64) (_ bv13996572127027071609 64)) (= |H8| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv2114446846299276163 64) (_ bv2114446846299276163 64)) (= |H7| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv1047047482162402147 64) (_ bv1047047482162402147 64)) (= |H6| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv10405249092449044325 64) (_ bv10405249092449044325 64)) (= |H5| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv377744083974372921 64) (_ bv377744083974372921 64)) (= |H4| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv15301059230128905451 64) (_ bv15301059230128905451 64)) (= |H2| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv11340964582085856861 64) (_ bv11340964582085856861 64)) (= |H1| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv16291023804077230134 64) (_ bv16291023804077230134 64)) (= |H3| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv8709624960948506803 64) (_ bv8709624960948506803 64)) (= |H0| (_ bv18446744069414584320 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> ~((~0 >> 16) >> 16)
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv8709624960948506803 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv11340964582085856861 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv15301059230128905451 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv16291023804077230134 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv377744083974372921 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv10405249092449044325 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv1047047482162402147 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv2114446846299276163 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13996572127027071609 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11634916515633359235 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2114446846299276163 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv377744083974372921 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv8709624960948506803 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv10405249092449044325 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv11340964582085856861 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv11634916515633359235 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv13996572127027071609 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv15301059230128905451 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv16291023804077230134 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv1047047482162402147 64) ) (_ bv18446744069414584320 64))) (and (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv11634916515633359235 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv13996572127027071609 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv2114446846299276163 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv1047047482162402147 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv10405249092449044325 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv377744083974372921 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv16291023804077230134 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv15301059230128905451 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv11340964582085856861 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv8709624960948506803 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
        0.82 real         0.42 user         0.06 sys
