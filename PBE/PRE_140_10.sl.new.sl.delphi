Fri 21 May 2021 15:48:38 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv565090753510821528 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv2198493412687602718 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7610559126780957564 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13045815304217528697 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1411148468745192023 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11679725258042716236 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15047536653459409364 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv104967600265834116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13697808050861884382 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv548714221144639358 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv548714221144639358 64) )) (= (_ bv0 64) (ref (_ bv13697808050861884382 64) )) (= (_ bv0 64) (ref (_ bv104967600265834116 64) )) (= (_ bv0 64) (ref (_ bv15047536653459409364 64) )) (= (_ bv0 64) (ref (_ bv11679725258042716236 64) )) (= (_ bv0 64) (ref (_ bv1411148468745192023 64) )) (= (_ bv0 64) (ref (_ bv13045815304217528697 64) )) (= (_ bv0 64) (ref (_ bv7610559126780957564 64) )) (= (_ bv0 64) (ref (_ bv2198493412687602718 64) )) (= (_ bv0 64) (ref (_ bv565090753510821528 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv565090753510821528 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv2198493412687602718 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7610559126780957564 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13045815304217528697 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1411148468745192023 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11679725258042716236 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15047536653459409364 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv104967600265834116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13697808050861884382 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv548714221144639358 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv548714221144639358 64) )) (= (_ bv0 64) (ref (_ bv13697808050861884382 64) )) (= (_ bv0 64) (ref (_ bv104967600265834116 64) )) (= (_ bv0 64) (ref (_ bv15047536653459409364 64) )) (= (_ bv0 64) (ref (_ bv11679725258042716236 64) )) (= (_ bv0 64) (ref (_ bv1411148468745192023 64) )) (= (_ bv0 64) (ref (_ bv13045815304217528697 64) )) (= (_ bv0 64) (ref (_ bv7610559126780957564 64) )) (= (_ bv0 64) (ref (_ bv2198493412687602718 64) )) (= (_ bv0 64) (ref (_ bv565090753510821528 64) )))))

; set_to true
(assert (=> (= (_ bv548714221144639358 64) (_ bv548714221144639358 64)) (= |H9| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv13697808050861884382 64) (_ bv13697808050861884382 64)) (= |H8| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv104967600265834116 64) (_ bv104967600265834116 64)) (= |H7| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv15047536653459409364 64) (_ bv15047536653459409364 64)) (= |H6| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv11679725258042716236 64) (_ bv11679725258042716236 64)) (= |H5| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv1411148468745192023 64) (_ bv1411148468745192023 64)) (= |H4| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv7610559126780957564 64) (_ bv7610559126780957564 64)) (= |H2| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv2198493412687602718 64) (_ bv2198493412687602718 64)) (= |H1| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv13045815304217528697 64) (_ bv13045815304217528697 64)) (= |H3| (_ bv8589934591 64))))

; set_to true
(assert (=> (= (_ bv565090753510821528 64) (_ bv565090753510821528 64)) (= |H0| (_ bv8589934591 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> ((~0 >> 16) << 1) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv565090753510821528 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv2198493412687602718 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7610559126780957564 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv13045815304217528697 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1411148468745192023 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11679725258042716236 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15047536653459409364 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv104967600265834116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv13697808050861884382 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv548714221144639358 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1411148468745192023 64) ) (_ bv8589934591 64)) (= (ref (_ bv104967600265834116 64) ) (_ bv8589934591 64)) (= (ref (_ bv2198493412687602718 64) ) (_ bv8589934591 64)) (= (ref (_ bv7610559126780957564 64) ) (_ bv8589934591 64)) (= (ref (_ bv548714221144639358 64) ) (_ bv8589934591 64)) (= (ref (_ bv565090753510821528 64) ) (_ bv8589934591 64)) (= (ref (_ bv11679725258042716236 64) ) (_ bv8589934591 64)) (= (ref (_ bv13045815304217528697 64) ) (_ bv8589934591 64)) (= (ref (_ bv13697808050861884382 64) ) (_ bv8589934591 64)) (= (ref (_ bv15047536653459409364 64) ) (_ bv8589934591 64))) (and (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv548714221144639358 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv13697808050861884382 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv104967600265834116 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv15047536653459409364 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv11679725258042716236 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv1411148468745192023 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv13045815304217528697 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv7610559126780957564 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv2198493412687602718 64) )) (= (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64)) (ref (_ bv565090753510821528 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvshl (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv1 64)) (_ bv16 64))
        0.81 real         0.46 user         0.06 sys
