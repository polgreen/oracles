Fri 21 May 2021 15:41:49 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1487008275270633372 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv2970512140791356929 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv5252559784014304272 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv17108664934516687511 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv6784820834687114916 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv14084654660183213004 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv944645147205855209 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6261259689699607559 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv4196208888844748226 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv15173826948075921086 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv15173826948075921086 64) )) (= (_ bv0 64) (ref (_ bv4196208888844748226 64) )) (= (_ bv0 64) (ref (_ bv6261259689699607559 64) )) (= (_ bv0 64) (ref (_ bv944645147205855209 64) )) (= (_ bv0 64) (ref (_ bv14084654660183213004 64) )) (= (_ bv0 64) (ref (_ bv6784820834687114916 64) )) (= (_ bv0 64) (ref (_ bv17108664934516687511 64) )) (= (_ bv0 64) (ref (_ bv5252559784014304272 64) )) (= (_ bv0 64) (ref (_ bv2970512140791356929 64) )) (= (_ bv0 64) (ref (_ bv1487008275270633372 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1487008275270633372 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv2970512140791356929 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv5252559784014304272 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv17108664934516687511 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv6784820834687114916 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv14084654660183213004 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv944645147205855209 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv6261259689699607559 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv4196208888844748226 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv15173826948075921086 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv15173826948075921086 64) )) (= (_ bv0 64) (ref (_ bv4196208888844748226 64) )) (= (_ bv0 64) (ref (_ bv6261259689699607559 64) )) (= (_ bv0 64) (ref (_ bv944645147205855209 64) )) (= (_ bv0 64) (ref (_ bv14084654660183213004 64) )) (= (_ bv0 64) (ref (_ bv6784820834687114916 64) )) (= (_ bv0 64) (ref (_ bv17108664934516687511 64) )) (= (_ bv0 64) (ref (_ bv5252559784014304272 64) )) (= (_ bv0 64) (ref (_ bv2970512140791356929 64) )) (= (_ bv0 64) (ref (_ bv1487008275270633372 64) )))))

; set_to true
(assert (=> (= (_ bv15173826948075921086 64) (_ bv15173826948075921086 64)) (= |H9| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv4196208888844748226 64) (_ bv4196208888844748226 64)) (= |H8| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv6261259689699607559 64) (_ bv6261259689699607559 64)) (= |H7| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv944645147205855209 64) (_ bv944645147205855209 64)) (= |H6| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv14084654660183213004 64) (_ bv14084654660183213004 64)) (= |H5| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv6784820834687114916 64) (_ bv6784820834687114916 64)) (= |H4| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv5252559784014304272 64) (_ bv5252559784014304272 64)) (= |H2| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv2970512140791356929 64) (_ bv2970512140791356929 64)) (= |H1| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv17108664934516687511 64) (_ bv17108664934516687511 64)) (= |H3| (_ bv0 64))))

; set_to true
(assert (=> (= (_ bv1487008275270633372 64) (_ bv1487008275270633372 64)) (= |H0| (_ bv0 64))))

Verification passed
SOLUTION:
f  =  (_ bv0 64)
        0.38 real         0.07 user         0.05 sys
