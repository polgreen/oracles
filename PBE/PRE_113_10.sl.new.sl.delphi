Fri 21 May 2021 15:45:04 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15024913675597573099 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16544883495650890889 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12324289728556372505 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9551748751750219555 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv2206304274719365937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16036823894145959841 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8363963025696013400 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3206261676649134528 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3163339571506658541 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11271425087918167604 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11271425087918167604 64) )) (= (_ bv0 64) (ref (_ bv3163339571506658541 64) )) (= (_ bv0 64) (ref (_ bv3206261676649134528 64) )) (= (_ bv0 64) (ref (_ bv8363963025696013400 64) )) (= (_ bv0 64) (ref (_ bv16036823894145959841 64) )) (= (_ bv0 64) (ref (_ bv2206304274719365937 64) )) (= (_ bv0 64) (ref (_ bv9551748751750219555 64) )) (= (_ bv0 64) (ref (_ bv12324289728556372505 64) )) (= (_ bv0 64) (ref (_ bv16544883495650890889 64) )) (= (_ bv0 64) (ref (_ bv15024913675597573099 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15024913675597573099 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16544883495650890889 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12324289728556372505 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9551748751750219555 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv2206304274719365937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16036823894145959841 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8363963025696013400 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3206261676649134528 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3163339571506658541 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11271425087918167604 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11271425087918167604 64) )) (= (_ bv0 64) (ref (_ bv3163339571506658541 64) )) (= (_ bv0 64) (ref (_ bv3206261676649134528 64) )) (= (_ bv0 64) (ref (_ bv8363963025696013400 64) )) (= (_ bv0 64) (ref (_ bv16036823894145959841 64) )) (= (_ bv0 64) (ref (_ bv2206304274719365937 64) )) (= (_ bv0 64) (ref (_ bv9551748751750219555 64) )) (= (_ bv0 64) (ref (_ bv12324289728556372505 64) )) (= (_ bv0 64) (ref (_ bv16544883495650890889 64) )) (= (_ bv0 64) (ref (_ bv15024913675597573099 64) )))))

; set_to true
(assert (=> (= (_ bv11271425087918167604 64) (_ bv11271425087918167604 64)) (= |H9| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv3163339571506658541 64) (_ bv3163339571506658541 64)) (= |H8| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv3206261676649134528 64) (_ bv3206261676649134528 64)) (= |H7| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv8363963025696013400 64) (_ bv8363963025696013400 64)) (= |H6| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv16036823894145959841 64) (_ bv16036823894145959841 64)) (= |H5| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv2206304274719365937 64) (_ bv2206304274719365937 64)) (= |H4| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv12324289728556372505 64) (_ bv12324289728556372505 64)) (= |H2| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv16544883495650890889 64) (_ bv16544883495650890889 64)) (= |H1| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv9551748751750219555 64) (_ bv9551748751750219555 64)) (= |H3| (_ bv2147483648 64))))

; set_to true
(assert (=> (= (_ bv15024913675597573099 64) (_ bv15024913675597573099 64)) (= |H0| (_ bv2147483648 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv15024913675597573099 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv16544883495650890889 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv12324289728556372505 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9551748751750219555 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv2206304274719365937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16036823894145959841 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv8363963025696013400 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3206261676649134528 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3163339571506658541 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11271425087918167604 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2206304274719365937 64) ) (_ bv2147483648 64)) (= (ref (_ bv3163339571506658541 64) ) (_ bv2147483648 64)) (= (ref (_ bv3206261676649134528 64) ) (_ bv2147483648 64)) (= (ref (_ bv8363963025696013400 64) ) (_ bv2147483648 64)) (= (ref (_ bv9551748751750219555 64) ) (_ bv2147483648 64)) (= (ref (_ bv11271425087918167604 64) ) (_ bv2147483648 64)) (= (ref (_ bv12324289728556372505 64) ) (_ bv2147483648 64)) (= (ref (_ bv15024913675597573099 64) ) (_ bv2147483648 64)) (= (ref (_ bv16036823894145959841 64) ) (_ bv2147483648 64)) (= (ref (_ bv16544883495650890889 64) ) (_ bv2147483648 64))) (and (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv11271425087918167604 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv3163339571506658541 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv3206261676649134528 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv8363963025696013400 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16036823894145959841 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv2206304274719365937 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv9551748751750219555 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv12324289728556372505 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv16544883495650890889 64) )) (= (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64)) (ref (_ bv15024913675597573099 64) ))))))

Verification passed
SOLUTION:
f  =  (bvlshr (bvlshr (bvnot (bvlshr (bvnot (_ bv0 64)) (_ bv1 64))) (_ bv16 64)) (_ bv16 64))
        5.76 real         5.39 user         0.09 sys
