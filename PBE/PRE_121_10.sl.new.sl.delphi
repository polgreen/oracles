Fri 21 May 2021 15:46:20 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv2155797735602017948 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14820847590621409326 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv5895459597104103753 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9486682053273487373 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv7194073012232607301 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2473326593547001089 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15951398426280950717 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16321234357265196369 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv9754459253876110424 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4121702078158632289 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4121702078158632289 64) )) (= (_ bv0 64) (ref (_ bv9754459253876110424 64) )) (= (_ bv0 64) (ref (_ bv16321234357265196369 64) )) (= (_ bv0 64) (ref (_ bv15951398426280950717 64) )) (= (_ bv0 64) (ref (_ bv2473326593547001089 64) )) (= (_ bv0 64) (ref (_ bv7194073012232607301 64) )) (= (_ bv0 64) (ref (_ bv9486682053273487373 64) )) (= (_ bv0 64) (ref (_ bv5895459597104103753 64) )) (= (_ bv0 64) (ref (_ bv14820847590621409326 64) )) (= (_ bv0 64) (ref (_ bv2155797735602017948 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv2155797735602017948 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14820847590621409326 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv5895459597104103753 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9486682053273487373 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv7194073012232607301 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2473326593547001089 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15951398426280950717 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16321234357265196369 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv9754459253876110424 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4121702078158632289 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv4121702078158632289 64) )) (= (_ bv0 64) (ref (_ bv9754459253876110424 64) )) (= (_ bv0 64) (ref (_ bv16321234357265196369 64) )) (= (_ bv0 64) (ref (_ bv15951398426280950717 64) )) (= (_ bv0 64) (ref (_ bv2473326593547001089 64) )) (= (_ bv0 64) (ref (_ bv7194073012232607301 64) )) (= (_ bv0 64) (ref (_ bv9486682053273487373 64) )) (= (_ bv0 64) (ref (_ bv5895459597104103753 64) )) (= (_ bv0 64) (ref (_ bv14820847590621409326 64) )) (= (_ bv0 64) (ref (_ bv2155797735602017948 64) )))))

; set_to true
(assert (=> (= (_ bv4121702078158632289 64) (_ bv4121702078158632289 64)) (= |H9| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv9754459253876110424 64) (_ bv9754459253876110424 64)) (= |H8| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv16321234357265196369 64) (_ bv16321234357265196369 64)) (= |H7| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv15951398426280950717 64) (_ bv15951398426280950717 64)) (= |H6| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv2473326593547001089 64) (_ bv2473326593547001089 64)) (= |H5| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv7194073012232607301 64) (_ bv7194073012232607301 64)) (= |H4| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv5895459597104103753 64) (_ bv5895459597104103753 64)) (= |H2| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv14820847590621409326 64) (_ bv14820847590621409326 64)) (= |H1| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv9486682053273487373 64) (_ bv9486682053273487373 64)) (= |H3| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv2155797735602017948 64) (_ bv2155797735602017948 64)) (= |H0| (_ bv18446744073709551614 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvnot (_ bv1 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv2155797735602017948 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv14820847590621409326 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv5895459597104103753 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv9486682053273487373 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv7194073012232607301 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv2473326593547001089 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv15951398426280950717 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv16321234357265196369 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv9754459253876110424 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv4121702078158632289 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2155797735602017948 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv2473326593547001089 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv4121702078158632289 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv5895459597104103753 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv7194073012232607301 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv9486682053273487373 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv9754459253876110424 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv14820847590621409326 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv15951398426280950717 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv16321234357265196369 64) ) (_ bv18446744073709551614 64))) (and (= (bvnot (_ bv1 64)) (ref (_ bv4121702078158632289 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv9754459253876110424 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv16321234357265196369 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv15951398426280950717 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv2473326593547001089 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv7194073012232607301 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv9486682053273487373 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv5895459597104103753 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv14820847590621409326 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv2155797735602017948 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (_ bv1 64))
        0.39 real         0.09 user         0.05 sys
