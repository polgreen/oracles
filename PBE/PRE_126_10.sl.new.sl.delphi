Fri 21 May 2021 15:47:29 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4637355800653346533 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3882390386372783063 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11417394982341306984 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv8913603940011299259 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12186320335969891309 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8470495278809008042 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2326959258965022176 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13026521672341753559 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8881971204248734547 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8198769772301096064 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv8198769772301096064 64) )) (= (_ bv0 64) (ref (_ bv8881971204248734547 64) )) (= (_ bv0 64) (ref (_ bv13026521672341753559 64) )) (= (_ bv0 64) (ref (_ bv2326959258965022176 64) )) (= (_ bv0 64) (ref (_ bv8470495278809008042 64) )) (= (_ bv0 64) (ref (_ bv12186320335969891309 64) )) (= (_ bv0 64) (ref (_ bv8913603940011299259 64) )) (= (_ bv0 64) (ref (_ bv11417394982341306984 64) )) (= (_ bv0 64) (ref (_ bv3882390386372783063 64) )) (= (_ bv0 64) (ref (_ bv4637355800653346533 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4637355800653346533 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3882390386372783063 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11417394982341306984 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv8913603940011299259 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12186320335969891309 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8470495278809008042 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2326959258965022176 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13026521672341753559 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8881971204248734547 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8198769772301096064 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv8198769772301096064 64) )) (= (_ bv0 64) (ref (_ bv8881971204248734547 64) )) (= (_ bv0 64) (ref (_ bv13026521672341753559 64) )) (= (_ bv0 64) (ref (_ bv2326959258965022176 64) )) (= (_ bv0 64) (ref (_ bv8470495278809008042 64) )) (= (_ bv0 64) (ref (_ bv12186320335969891309 64) )) (= (_ bv0 64) (ref (_ bv8913603940011299259 64) )) (= (_ bv0 64) (ref (_ bv11417394982341306984 64) )) (= (_ bv0 64) (ref (_ bv3882390386372783063 64) )) (= (_ bv0 64) (ref (_ bv4637355800653346533 64) )))))

; set_to true
(assert (=> (= (_ bv8198769772301096064 64) (_ bv8198769772301096064 64)) (= |H9| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv8881971204248734547 64) (_ bv8881971204248734547 64)) (= |H8| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv13026521672341753559 64) (_ bv13026521672341753559 64)) (= |H7| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv2326959258965022176 64) (_ bv2326959258965022176 64)) (= |H6| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv8470495278809008042 64) (_ bv8470495278809008042 64)) (= |H5| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv12186320335969891309 64) (_ bv12186320335969891309 64)) (= |H4| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv11417394982341306984 64) (_ bv11417394982341306984 64)) (= |H2| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv3882390386372783063 64) (_ bv3882390386372783063 64)) (= |H1| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv8913603940011299259 64) (_ bv8913603940011299259 64)) (= |H3| (_ bv18446744073709551614 64))))

; set_to true
(assert (=> (= (_ bv4637355800653346533 64) (_ bv4637355800653346533 64)) (= |H0| (_ bv18446744073709551614 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvnot (_ bv1 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv4637355800653346533 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv3882390386372783063 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv11417394982341306984 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv8913603940011299259 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv12186320335969891309 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv8470495278809008042 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2326959258965022176 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv13026521672341753559 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv8881971204248734547 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv8198769772301096064 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2326959258965022176 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv3882390386372783063 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv4637355800653346533 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv8198769772301096064 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv8470495278809008042 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv8881971204248734547 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv8913603940011299259 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv11417394982341306984 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv12186320335969891309 64) ) (_ bv18446744073709551614 64)) (= (ref (_ bv13026521672341753559 64) ) (_ bv18446744073709551614 64))) (and (= (bvnot (_ bv1 64)) (ref (_ bv8198769772301096064 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv8881971204248734547 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv13026521672341753559 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv2326959258965022176 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv8470495278809008042 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv12186320335969891309 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv8913603940011299259 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv11417394982341306984 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv3882390386372783063 64) )) (= (bvnot (_ bv1 64)) (ref (_ bv4637355800653346533 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (_ bv1 64))
        0.44 real         0.08 user         0.05 sys
