Fri 21 May 2021 15:47:31 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12419310748915556939 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv4714920807210001838 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13996605368400211474 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv1246592909045838813 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10150293454135434980 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv14013807694735129148 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12267296235808003162 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3019134265986199562 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv847866697474134844 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7235435732743521346 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv7235435732743521346 64) )) (= (_ bv0 64) (ref (_ bv847866697474134844 64) )) (= (_ bv0 64) (ref (_ bv3019134265986199562 64) )) (= (_ bv0 64) (ref (_ bv12267296235808003162 64) )) (= (_ bv0 64) (ref (_ bv14013807694735129148 64) )) (= (_ bv0 64) (ref (_ bv10150293454135434980 64) )) (= (_ bv0 64) (ref (_ bv1246592909045838813 64) )) (= (_ bv0 64) (ref (_ bv13996605368400211474 64) )) (= (_ bv0 64) (ref (_ bv4714920807210001838 64) )) (= (_ bv0 64) (ref (_ bv12419310748915556939 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12419310748915556939 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv4714920807210001838 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13996605368400211474 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv1246592909045838813 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10150293454135434980 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv14013807694735129148 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12267296235808003162 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3019134265986199562 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv847866697474134844 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7235435732743521346 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv7235435732743521346 64) )) (= (_ bv0 64) (ref (_ bv847866697474134844 64) )) (= (_ bv0 64) (ref (_ bv3019134265986199562 64) )) (= (_ bv0 64) (ref (_ bv12267296235808003162 64) )) (= (_ bv0 64) (ref (_ bv14013807694735129148 64) )) (= (_ bv0 64) (ref (_ bv10150293454135434980 64) )) (= (_ bv0 64) (ref (_ bv1246592909045838813 64) )) (= (_ bv0 64) (ref (_ bv13996605368400211474 64) )) (= (_ bv0 64) (ref (_ bv4714920807210001838 64) )) (= (_ bv0 64) (ref (_ bv12419310748915556939 64) )))))

; set_to true
(assert (=> (= (_ bv7235435732743521346 64) (_ bv7235435732743521346 64)) (= |H9| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv847866697474134844 64) (_ bv847866697474134844 64)) (= |H8| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv3019134265986199562 64) (_ bv3019134265986199562 64)) (= |H7| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv12267296235808003162 64) (_ bv12267296235808003162 64)) (= |H6| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv14013807694735129148 64) (_ bv14013807694735129148 64)) (= |H5| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv10150293454135434980 64) (_ bv10150293454135434980 64)) (= |H4| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv13996605368400211474 64) (_ bv13996605368400211474 64)) (= |H2| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv4714920807210001838 64) (_ bv4714920807210001838 64)) (= |H1| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv1246592909045838813 64) (_ bv1246592909045838813 64)) (= |H3| (_ bv2 64))))

; set_to true
(assert (=> (= (_ bv12419310748915556939 64) (_ bv12419310748915556939 64)) (= |H0| (_ bv2 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvshl (_ bv1 64) (_ bv1 64))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv12419310748915556939 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv4714920807210001838 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv13996605368400211474 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv1246592909045838813 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv10150293454135434980 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv14013807694735129148 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv12267296235808003162 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv3019134265986199562 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv847866697474134844 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv7235435732743521346 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1246592909045838813 64) ) (_ bv2 64)) (= (ref (_ bv3019134265986199562 64) ) (_ bv2 64)) (= (ref (_ bv4714920807210001838 64) ) (_ bv2 64)) (= (ref (_ bv7235435732743521346 64) ) (_ bv2 64)) (= (ref (_ bv10150293454135434980 64) ) (_ bv2 64)) (= (ref (_ bv12267296235808003162 64) ) (_ bv2 64)) (= (ref (_ bv12419310748915556939 64) ) (_ bv2 64)) (= (ref (_ bv847866697474134844 64) ) (_ bv2 64)) (= (ref (_ bv13996605368400211474 64) ) (_ bv2 64)) (= (ref (_ bv14013807694735129148 64) ) (_ bv2 64))) (and (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv7235435732743521346 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv847866697474134844 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv3019134265986199562 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv12267296235808003162 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv14013807694735129148 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv10150293454135434980 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv1246592909045838813 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv13996605368400211474 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv4714920807210001838 64) )) (= (bvshl (_ bv1 64) (_ bv1 64)) (ref (_ bv12419310748915556939 64) ))))))

Verification passed
SOLUTION:
f  =  (bvshl (_ bv1 64) (_ bv1 64))
        0.40 real         0.09 user         0.05 sys
