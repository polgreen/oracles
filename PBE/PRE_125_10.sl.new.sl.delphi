Fri 21 May 2021 15:47:23 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1881234564478115505 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7279928742599519878 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv2214516214297803125 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3146776842634435901 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17109991824824527945 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16265375253328438073 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2372573891946421082 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv12125708709163613640 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3079341198722800531 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2155679931369901744 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2155679931369901744 64) )) (= (_ bv0 64) (ref (_ bv3079341198722800531 64) )) (= (_ bv0 64) (ref (_ bv12125708709163613640 64) )) (= (_ bv0 64) (ref (_ bv2372573891946421082 64) )) (= (_ bv0 64) (ref (_ bv16265375253328438073 64) )) (= (_ bv0 64) (ref (_ bv17109991824824527945 64) )) (= (_ bv0 64) (ref (_ bv3146776842634435901 64) )) (= (_ bv0 64) (ref (_ bv2214516214297803125 64) )) (= (_ bv0 64) (ref (_ bv7279928742599519878 64) )) (= (_ bv0 64) (ref (_ bv1881234564478115505 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1881234564478115505 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7279928742599519878 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv2214516214297803125 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3146776842634435901 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17109991824824527945 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16265375253328438073 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2372573891946421082 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv12125708709163613640 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3079341198722800531 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2155679931369901744 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv2155679931369901744 64) )) (= (_ bv0 64) (ref (_ bv3079341198722800531 64) )) (= (_ bv0 64) (ref (_ bv12125708709163613640 64) )) (= (_ bv0 64) (ref (_ bv2372573891946421082 64) )) (= (_ bv0 64) (ref (_ bv16265375253328438073 64) )) (= (_ bv0 64) (ref (_ bv17109991824824527945 64) )) (= (_ bv0 64) (ref (_ bv3146776842634435901 64) )) (= (_ bv0 64) (ref (_ bv2214516214297803125 64) )) (= (_ bv0 64) (ref (_ bv7279928742599519878 64) )) (= (_ bv0 64) (ref (_ bv1881234564478115505 64) )))))

; set_to true
(assert (=> (= (_ bv2155679931369901744 64) (_ bv2155679931369901744 64)) (= |H9| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv3079341198722800531 64) (_ bv3079341198722800531 64)) (= |H8| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv12125708709163613640 64) (_ bv12125708709163613640 64)) (= |H7| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv2372573891946421082 64) (_ bv2372573891946421082 64)) (= |H6| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv16265375253328438073 64) (_ bv16265375253328438073 64)) (= |H5| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv17109991824824527945 64) (_ bv17109991824824527945 64)) (= |H4| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv2214516214297803125 64) (_ bv2214516214297803125 64)) (= |H2| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv7279928742599519878 64) (_ bv7279928742599519878 64)) (= |H1| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv3146776842634435901 64) (_ bv3146776842634435901 64)) (= |H3| (_ bv18446744065119617025 64))))

; set_to true
(assert (=> (= (_ bv1881234564478115505 64) (_ bv1881234564478115505 64)) (= |H0| (_ bv18446744065119617025 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1881234564478115505 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7279928742599519878 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv2214516214297803125 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3146776842634435901 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv17109991824824527945 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv16265375253328438073 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv2372573891946421082 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv12125708709163613640 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv3079341198722800531 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv2155679931369901744 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1881234564478115505 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv2155679931369901744 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv2214516214297803125 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv2372573891946421082 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv3079341198722800531 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv3146776842634435901 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv7279928742599519878 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv12125708709163613640 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv16265375253328438073 64) ) (_ bv18446744065119617025 64)) (= (ref (_ bv17109991824824527945 64) ) (_ bv18446744065119617025 64))) (and (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv2155679931369901744 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv3079341198722800531 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv12125708709163613640 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv2372573891946421082 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv16265375253328438073 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv17109991824824527945 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv3146776842634435901 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv2214516214297803125 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv7279928742599519878 64) )) (= (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64))) (ref (_ bv1881234564478115505 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (bvshl (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv1 64)))
        5.65 real         5.30 user         0.08 sys
