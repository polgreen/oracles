Fri 21 May 2021 15:46:19 BST
non terminal has 13rules
Start OGIS
SYNTH iteration 1
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (_ bv0 64)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6140498045269843624 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5205520202244973974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7761482415970774676 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv891380567554450028 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5044531689893711899 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11268634966081295037 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv17141126867343783556 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17135846793033979116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv2383853510254979613 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11365145267363833012 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11365145267363833012 64) )) (= (_ bv0 64) (ref (_ bv2383853510254979613 64) )) (= (_ bv0 64) (ref (_ bv17135846793033979116 64) )) (= (_ bv0 64) (ref (_ bv17141126867343783556 64) )) (= (_ bv0 64) (ref (_ bv11268634966081295037 64) )) (= (_ bv0 64) (ref (_ bv5044531689893711899 64) )) (= (_ bv0 64) (ref (_ bv891380567554450028 64) )) (= (_ bv0 64) (ref (_ bv7761482415970774676 64) )) (= (_ bv0 64) (ref (_ bv5205520202244973974 64) )) (= (_ bv0 64) (ref (_ bv6140498045269843624 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6140498045269843624 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5205520202244973974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7761482415970774676 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv891380567554450028 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5044531689893711899 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11268634966081295037 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv17141126867343783556 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17135846793033979116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv2383853510254979613 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11365145267363833012 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv11365145267363833012 64) )) (= (_ bv0 64) (ref (_ bv2383853510254979613 64) )) (= (_ bv0 64) (ref (_ bv17135846793033979116 64) )) (= (_ bv0 64) (ref (_ bv17141126867343783556 64) )) (= (_ bv0 64) (ref (_ bv11268634966081295037 64) )) (= (_ bv0 64) (ref (_ bv5044531689893711899 64) )) (= (_ bv0 64) (ref (_ bv891380567554450028 64) )) (= (_ bv0 64) (ref (_ bv7761482415970774676 64) )) (= (_ bv0 64) (ref (_ bv5205520202244973974 64) )) (= (_ bv0 64) (ref (_ bv6140498045269843624 64) )))))

; set_to true
(assert (=> (= (_ bv11365145267363833012 64) (_ bv11365145267363833012 64)) (= |H9| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv2383853510254979613 64) (_ bv2383853510254979613 64)) (= |H8| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv17135846793033979116 64) (_ bv17135846793033979116 64)) (= |H7| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv17141126867343783556 64) (_ bv17141126867343783556 64)) (= |H6| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv11268634966081295037 64) (_ bv11268634966081295037 64)) (= |H5| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv5044531689893711899 64) (_ bv5044531689893711899 64)) (= |H4| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv7761482415970774676 64) (_ bv7761482415970774676 64)) (= |H2| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv5205520202244973974 64) (_ bv5205520202244973974 64)) (= |H1| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv891380567554450028 64) (_ bv891380567554450028 64)) (= |H3| (_ bv18446744069414584320 64))))

; set_to true
(assert (=> (= (_ bv6140498045269843624 64) (_ bv6140498045269843624 64)) (= |H0| (_ bv18446744069414584320 64))))

Fail: got 10 new constraints
SYNTH iteration 2
outputting synth fun with grammar 
rules for nt 13
RUle constant(_ bv0 64)
RUle constant(_ bv1 64)
RUle symbolx
RUle bitnot(bvnot Start)
RUle shl(bvshl Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv1 64))
RUle lshr(bvlshr Start (_ bv4 64))
RUle lshr(bvlshr Start (_ bv16 64))
RUle bitand(bvand Start Start)
RUle bitor(bvor Start Start)
RUle bitxor(bvxor Start Start)
RUle +(bvadd Start Start)
RUle if(ite (= Start (_ bv1 64)) Start Start)
Got solution f -> (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv6140498045269843624 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv5205520202244973974 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv7761482415970774676 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv891380567554450028 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv5044531689893711899 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv11268634966081295037 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv17141126867343783556 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv17135846793033979116 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv2383853510254979613 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv11365145267363833012 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv2383853510254979613 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv5044531689893711899 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv5205520202244973974 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv6140498045269843624 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv7761482415970774676 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv11268634966081295037 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv11365145267363833012 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv891380567554450028 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv17135846793033979116 64) ) (_ bv18446744069414584320 64)) (= (ref (_ bv17141126867343783556 64) ) (_ bv18446744069414584320 64))) (and (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv11365145267363833012 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv2383853510254979613 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv17135846793033979116 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv17141126867343783556 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv11268634966081295037 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv5044531689893711899 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv891380567554450028 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv7761482415970774676 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv5205520202244973974 64) )) (= (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv6140498045269843624 64) ))))))

Verification passed
SOLUTION:
f  =  (bvnot (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)))
        0.72 real         0.40 user         0.06 sys
