Fri 21 May 2021 15:56:37 BST
Start OGIS
SYNTH iteration 1
Got solution f -> 0
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1446722502022060076 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7840422561719738478 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1761389082843808595 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3224808979190163128 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1048831584294800937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9096080096327578467 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv14007273557140006684 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv976194383843395810 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv17185417654713594920 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv398401322580936660 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv398401322580936660 64) )) (= (_ bv0 64) (ref (_ bv17185417654713594920 64) )) (= (_ bv0 64) (ref (_ bv976194383843395810 64) )) (= (_ bv0 64) (ref (_ bv14007273557140006684 64) )) (= (_ bv0 64) (ref (_ bv9096080096327578467 64) )) (= (_ bv0 64) (ref (_ bv1048831584294800937 64) )) (= (_ bv0 64) (ref (_ bv3224808979190163128 64) )) (= (_ bv0 64) (ref (_ bv1761389082843808595 64) )) (= (_ bv0 64) (ref (_ bv7840422561719738478 64) )) (= (_ bv0 64) (ref (_ bv1446722502022060076 64) )))))

Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
Unable to parse input value
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1446722502022060076 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7840422561719738478 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1761389082843808595 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3224808979190163128 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1048831584294800937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9096080096327578467 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv14007273557140006684 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv976194383843395810 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv17185417654713594920 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv398401322580936660 64) ))

; set_to false
(assert (not (and (= (_ bv0 64) (ref (_ bv398401322580936660 64) )) (= (_ bv0 64) (ref (_ bv17185417654713594920 64) )) (= (_ bv0 64) (ref (_ bv976194383843395810 64) )) (= (_ bv0 64) (ref (_ bv14007273557140006684 64) )) (= (_ bv0 64) (ref (_ bv9096080096327578467 64) )) (= (_ bv0 64) (ref (_ bv1048831584294800937 64) )) (= (_ bv0 64) (ref (_ bv3224808979190163128 64) )) (= (_ bv0 64) (ref (_ bv1761389082843808595 64) )) (= (_ bv0 64) (ref (_ bv7840422561719738478 64) )) (= (_ bv0 64) (ref (_ bv1446722502022060076 64) )))))

; set_to true
(assert (=> (= (_ bv398401322580936660 64) (_ bv398401322580936660 64)) (= |H9| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv17185417654713594920 64) (_ bv17185417654713594920 64)) (= |H8| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv976194383843395810 64) (_ bv976194383843395810 64)) (= |H7| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv14007273557140006684 64) (_ bv14007273557140006684 64)) (= |H6| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv9096080096327578467 64) (_ bv9096080096327578467 64)) (= |H5| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv1048831584294800937 64) (_ bv1048831584294800937 64)) (= |H4| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv1761389082843808595 64) (_ bv1761389082843808595 64)) (= |H2| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv7840422561719738478 64) (_ bv7840422561719738478 64)) (= |H1| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv3224808979190163128 64) (_ bv3224808979190163128 64)) (= |H3| (_ bv65534 64))))

; set_to true
(assert (=> (= (_ bv1446722502022060076 64) (_ bv1446722502022060076 64)) (= |H0| (_ bv65534 64))))

Fail: got 10 new constraints
SYNTH iteration 2
Got solution f -> 1 ^ ((~0 >> 16) >> 16) >> 16
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |ref| ((_ BitVec 64) )(_ BitVec 64))
; set_to true (equal)
(define-fun |H0| () (_ BitVec 64) (ref (_ bv1446722502022060076 64) ))

; set_to true (equal)
(define-fun |H1| () (_ BitVec 64) (ref (_ bv7840422561719738478 64) ))

; set_to true (equal)
(define-fun |H2| () (_ BitVec 64) (ref (_ bv1761389082843808595 64) ))

; set_to true (equal)
(define-fun |H3| () (_ BitVec 64) (ref (_ bv3224808979190163128 64) ))

; set_to true (equal)
(define-fun |H4| () (_ BitVec 64) (ref (_ bv1048831584294800937 64) ))

; set_to true (equal)
(define-fun |H5| () (_ BitVec 64) (ref (_ bv9096080096327578467 64) ))

; set_to true (equal)
(define-fun |H6| () (_ BitVec 64) (ref (_ bv14007273557140006684 64) ))

; set_to true (equal)
(define-fun |H7| () (_ BitVec 64) (ref (_ bv976194383843395810 64) ))

; set_to true (equal)
(define-fun |H8| () (_ BitVec 64) (ref (_ bv17185417654713594920 64) ))

; set_to true (equal)
(define-fun |H9| () (_ BitVec 64) (ref (_ bv398401322580936660 64) ))

; set_to false
(assert (not (=> (and (= (ref (_ bv1446722502022060076 64) ) (_ bv65534 64)) (= (ref (_ bv1761389082843808595 64) ) (_ bv65534 64)) (= (ref (_ bv3224808979190163128 64) ) (_ bv65534 64)) (= (ref (_ bv398401322580936660 64) ) (_ bv65534 64)) (= (ref (_ bv7840422561719738478 64) ) (_ bv65534 64)) (= (ref (_ bv9096080096327578467 64) ) (_ bv65534 64)) (= (ref (_ bv14007273557140006684 64) ) (_ bv65534 64)) (= (ref (_ bv976194383843395810 64) ) (_ bv65534 64)) (= (ref (_ bv1048831584294800937 64) ) (_ bv65534 64)) (= (ref (_ bv17185417654713594920 64) ) (_ bv65534 64))) (and (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv398401322580936660 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv17185417654713594920 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv976194383843395810 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv14007273557140006684 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv9096080096327578467 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv1048831584294800937 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv3224808979190163128 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv1761389082843808595 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv7840422561719738478 64) )) (= (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64))) (ref (_ bv1446722502022060076 64) ))))))

Verification passed
SOLUTION:
f  =  (bvxor (_ bv1 64) (bvlshr (bvlshr (bvlshr (bvnot (_ bv0 64)) (_ bv16 64)) (_ bv16 64)) (_ bv16 64)))
       14.21 real        13.54 user         0.14 sys
