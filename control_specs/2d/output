Start OGIS
SYNTH iteration 1
Solving query:
(set-logic ALL)
(synth-fun K0()
 (_ FloatingPoint 11 53)
)

(synth-fun K1()
 (_ FloatingPoint 11 53)
)

(check-synth)

Results K0
Results K1
Got solution K0 -> (double)CONCATENATION(0, 0, 0)
K1 -> (double)CONCATENATION(0, 0, 0)
VERIFY iteration 1
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |isStable| ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) )Bool)
; set_to true (equal)
(define-fun |H0| () Bool (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ))

; set_to true (equal)
(define-fun |H1| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H2| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H3| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H4| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))

; find_symbols
(declare-fun |x0| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step3| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step3| () (_ FloatingPoint 11 53))
; set_to false
(assert (not (and (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|))))) (and (fp.lt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step1|))))) (and (fp.lt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step1|)))) (and (= |x0step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step2|))) (= |x1step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))) |x1step2|))))) (and (fp.lt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))))

Running oracle (verification)  isstable 1.976807 -0.975978 1 0
Oracle response is false

warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
Fail: got 17 new constraints
SYNTH iteration 2
Solving query:
(set-logic ALL)
(synth-fun K0()
 (_ FloatingPoint 11 53)
)

(synth-fun K1()
 (_ FloatingPoint 11 53)
)

(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))))) (and (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)))))
(check-synth)

Results K0
Results K1
Got solution K0 -> (double)CONCATENATION(1, 0, 1081344)
K1 -> (double)CONCATENATION(0, 0, 262143)
VERIFY iteration 2
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |isStable| ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) )Bool)
; set_to true (equal)
(define-fun |H0| () Bool (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) ))

; set_to true (equal)
(define-fun |H1| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))

; set_to true (equal)
(define-fun |H2| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))

; set_to true (equal)
(define-fun |H3| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))

; set_to true (equal)
(define-fun |H4| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))

; find_symbols
(declare-fun |x0| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step3| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step3| () (_ FloatingPoint 11 53))
; set_to false
(assert (not (and (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) ) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|))))) (and (fp.lt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step1|))))) (and (fp.lt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step1|)))) (and (= |x0step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step2|))) (= |x1step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))) |x1step2|))))) (and (fp.lt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))))

warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
Fail: got 2 new constraints
SYNTH iteration 3
Solving query:
(set-logic ALL)
(synth-fun K0()
 (_ FloatingPoint 11 53)
)

(synth-fun K1()
 (_ FloatingPoint 11 53)
)

(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))))) (and (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)))))
(check-synth)

Results K0
Results K1
Got solution K0 -> (double)CONCATENATION(1, 0, 0)
K1 -> (double)CONCATENATION(1, 1012, 0)
VERIFY iteration 3
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |isStable| ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) )Bool)
; set_to true (equal)
(define-fun |H0| () Bool (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) ))

; set_to true (equal)
(define-fun |H1| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H2| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H3| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H4| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H5| () Bool (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ))

; find_symbols
(declare-fun |x0| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step3| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step3| () (_ FloatingPoint 11 53))
; set_to false
(assert (not (=> (and (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false) (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false)) (and (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) ) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|))))) (and (fp.lt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step1|))))) (and (fp.lt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step1|)))) (and (= |x0step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step2|))) (= |x1step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))) |x1step2|))))) (and (fp.lt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0)))))))))

Running oracle (verification)  isstable 1.976807 -0.975734 1 0
Oracle response is false

warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
warning adding counterexample into constraint did nothing 
Fail: got 5 new constraints
SYNTH iteration 4
Solving query:
(set-logic ALL)
(synth-fun K0()
 (_ FloatingPoint 11 53)
)

(synth-fun K1()
 (_ FloatingPoint 11 53)
)

(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0100000000100100000000000000000000000000000000000000000000000000)))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111))))) (and (= ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))))) (and (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0100000001010000000100011100010001111000001000010000000110000100)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b1000000010000110000111001010100001001100000000100000000100001111))))) (and (= ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111100110000001100000000001011111011111101010000000000101111)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111110101011001001010100101100010101010100110110111000011001)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (=> (and (and (or (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000) ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b1000000000000000000000000000000000000000000000000000000000000011)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011110100000110101100111000110010111011111001011101111111011000))))) (and (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)))) (= ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001))))) (and (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))) (= ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) #b0011111111110000000000000000000000000000000000000000000000000000)))))) (and (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt ((_ to_fp 11 53) #b0111111111110000000000000000000000000000000000000000000000000001) ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K0 ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv0 11) (_ bv1081344 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv0 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv262143 52))))))
(constraint (not (= K1 ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv1012 11) (_ bv0 52))))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K1)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K0)))))
(constraint (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) K1)))))
(check-synth)

Results K0
Results K1
Got solution K0 -> (double)CONCATENATION(1, 384, 0)
K1 -> (double)CONCATENATION(0, 0, 1)
VERIFY iteration 4
; SMT 2
; Generated for CVC 4
(set-info :source "generated by fastsynth")
(set-option :produce-models true)
(set-logic ALL)

; find_symbols
(declare-fun |isStable| ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) )Bool)
; set_to true (equal)
(define-fun |H0| () Bool (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) ))

; set_to true (equal)
(define-fun |H1| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H2| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))))

; set_to true (equal)
(define-fun |H3| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))))

; set_to true (equal)
(define-fun |H4| () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))))

; set_to true (equal)
(define-fun |H5| () Bool (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ))

; set_to true (equal)
(define-fun |H6| () Bool (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110010011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ))

; find_symbols
(declare-fun |x0| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step1| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step2| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x0step3| () (_ FloatingPoint 11 53))
; find_symbols
(declare-fun |x1step3| () (_ FloatingPoint 11 53))
; set_to false
(assert (not (=> (and (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false) (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false) (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110010011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false) (= (isStable (fp #b0 #b01111111111 #b1111101000010000000011010001011111011000000100011000) (fp #b1 #b01111111110 #b1111001110110011010110101011011110010011000101100101) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) ) false)) (and (isStable (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) ) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (and (not (fp.isNaN (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))))) (fp.lt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) (fp #b0 #b10000000010 #b0100000000000000000000000000000000000000000000000000)) (fp.gt (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) ((_ to_fp 11 53) roundNearestTiesToEven (- 10.0)))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|))))) (and (fp.lt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step1| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step1|))))) (and (fp.lt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step2| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))))) (=> (and (and (or (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x0| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1)))) (or (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven 0.1)) (= |x1| ((_ to_fp 11 53) roundNearestTiesToEven (- 0.1))))) (and (= |x0step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|))) (= |x1step1| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1|)))) (and (= |x0step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step1|))) (= |x1step2| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step1|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step1|)))) (and (= |x0step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.976807421037) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- 0.975977740201)) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.500000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step2|))) (= |x1step3| (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 1.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv1 1) (_ bv384 11) (_ bv0 52))))) |x0step2|) (fp.mul roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven 0.000000000000) ((_ to_fp 11 53) (concat (_ bv0 1) (_ bv0 11) (_ bv1 52))))) |x1step2|))))) (and (fp.lt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.lt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven 1.0)) (fp.gt |x0step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0))) (fp.gt |x1step3| ((_ to_fp 11 53) roundNearestTiesToEven (- 1.0)))))))))

